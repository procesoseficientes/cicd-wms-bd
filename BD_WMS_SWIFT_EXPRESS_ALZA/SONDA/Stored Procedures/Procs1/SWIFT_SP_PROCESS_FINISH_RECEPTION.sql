CREATE PROCEDURE [SONDA].[SWIFT_SP_PROCESS_FINISH_RECEPTION]
@pTASK_ID	INT,
@pLOGIN_ID	VARCHAR(50),
@pResult varchar(250) OUTPUT
AS
	
	DECLARE @ErrorMessage NVARCHAR(4000);
	DECLARE @ErrorSeverity INT;
	DECLARE @ErrorState INT;
	DECLARE @pAllocated INT;
	DECLARE @pScanned INT;

		BEGIN TRY

			SELECT @pAllocated = ISNULL((SELECT SUM([ALLOCATED]) FROM SWIFT_RECEPTION_DETAIL WHERE RECEPTION_HEADER = (SELECT TOP 1 RECEPTION_NUMBER FROM SWIFT_TASKS WHERE TASK_ID = @pTASK_ID)),0)		
			SELECT @pScanned = ISNULL((SELECT SUM([SCANNED]) FROM SWIFT_RECEPTION_DETAIL WHERE RECEPTION_HEADER = (SELECT TOP 1 RECEPTION_NUMBER FROM SWIFT_TASKS WHERE TASK_ID = @pTASK_ID)),0)		
			
			IF @pAllocated <> @pScanned BEGIN
				SELECT	@pResult	= 'ERROR, Debe ubicar la totalidad de skus recibidos';
				RETURN -2
			END

			UPDATE SWIFT_TASKS set SCANNING_STATUS = 'COMPLETED', TASK_STATUS = 'COMPLETED', COMPLETED_STAMP = CURRENT_TIMESTAMP,
			[ACTION] = 'COMPLETED' WHERE TASK_ID = @pTASK_ID
			
			IF @@ROWCOUNT <> 1 BEGIN
				SELECT	@pResult	= 'ERROR, no se pudo actualizar la tarea';
				RETURN -1
			END
			
			UPDATE SWIFT_RECEPTION_HEADER SET STATUS = 'COMPLETED', LAST_UPDATE = CURRENT_TIMESTAMP 
			WHERE RECEPTION_HEADER = (SELECT RECEPTION_NUMBER FROM SWIFT_TASKS WHERE TASK_ID = @pTASK_ID)

			IF @@ROWCOUNT <> 1 BEGIN
				SELECT	@pResult	= 'ERROR, no se pudo actualizar encabezado de recepcion';
				RETURN -1
			END
			
			SELECT	@pResult	= 'OK';
			RETURN 0
			
		END TRY
		BEGIN CATCH
			SELECT	@pResult	= ERROR_MESSAGE()
			RETURN -0
		END CATCH
