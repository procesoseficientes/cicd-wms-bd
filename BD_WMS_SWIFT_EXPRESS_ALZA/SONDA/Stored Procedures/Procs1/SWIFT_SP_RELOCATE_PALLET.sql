
-- =============================================
-- Autor:				ppablo.loukota
-- Fecha de Creacion: 	08-01-2016
-- Description:			Cambia la localizacion del pallet

--Modificacion 11-01-2016
		-- Autor: ppablo.loukota 	
		-- Description: Cambia los parametros 

--Modificacion 23-12-2015
		-- Autor: jose.garcia
		-- Descripción: Se agregro los parametros para de @SKU, @TASK_ID para validar pallet
		--				con la funcion SWIFT_FUNC_VALIDATE_TASK

/*
-- Ejemplo de Ejecucion:				
				--
EXECUTE  [SONDA].[SWIFT_SP_RELOCATE_PALLET] 
   @PALLET_ID = 1277
  ,@CODE_LOCATION = 'DER1120'
  ,@LAST_UPDATE_BY = 'gerente@SONDA'

				--				
*/
CREATE PROCEDURE [SONDA].[SWIFT_SP_RELOCATE_PALLET]
    @PALLET_ID AS INT
   ,@CODE_LOCATION AS VARCHAR (250) --NUEVA UBICACION
   ,@LAST_UPDATE_BY AS VARCHAR(250)

AS
BEGIN TRY
BEGIN TRANSACTION
	DECLARE
		@VALIDATE_PALLET AS BIT= NULL
		,@Result VARCHAR(250) = ''
		,@CODE_SKU  VARCHAR(50)
		,@BATCHID  INT = NULL
		,@TXN_ID  INT = NULL
		,@TASK_ID  INT = NULL
		,@NEW_WAREHOUSE  VARCHAR(50)  = NULL
		,@NEW_LOCATION  INT = NULL

		,@TranInsertPallet VARCHAR(20)
		SELECT @TranInsertPallet = 'Transaccion de Pallet a inventario y pallet';

	DECLARE @SOURCE_WAREHOUSE VARCHAR(50) = NULL
		,@SOURCE_LOCATION VARCHAR(50) = NULL	
		,@SOURCE_PALLET  INT = NULL
		,@QTY_IN  FLOAT = NULL
		,@QTY_TX  NUMERIC(18,2) = NULL
		,@DESCRIPTION_SKU AS VARCHAR(MAX) = NULL
		,@CODE_WAREHOUSE AS VARCHAR(50) = NULL
		,@NAME_USER VARCHAR(50) = NULL
		,@ID  INT = NULL
		,@TXN_SKU_BARCODE varchar(50) = NULL
		,@TXN_SKU_CLASSIFICATION [varchar](50) = NULL;

	DECLARE @ERROR VARCHAR(1000)

	SELECT 
			@BATCHID = [BATCH_ID] 
			,@QTY_IN = CONVERT(FLOAT, [QTY]) 
			,@QTY_TX = CONVERT(NUMERIC(18,2), [QTY])  
			,@LAST_UPDATE_BY = [LAST_UPDATE_BY] 
			,@TASK_ID = [TASK_ID]
	FROM 
			[SONDA].[SWIFT_PALLET] 
	WHERE 
			[PALLET_ID] = @PALLET_ID 


    SELECT @CODE_SKU =[SKU] FROM [SONDA].[SWIFT_BATCH] WHERE @BATCHID = [BATCH_ID] AND @TASK_ID = [TASK_ID]

    SELECT @NEW_WAREHOUSE = [CODE_WAREHOUSE] FROM  [SONDA].[SWIFT_LOCATIONS] WHERE [CODE_LOCATION] =@CODE_LOCATION;

	SELECT @NAME_USER = [NAME_USER] FROM [SONDA].[USERS] WHERE [LOGIN] = @LAST_UPDATE_BY;
	
	SELECT @DESCRIPTION_SKU = [DESCRIPTION_SKU],  @TXN_SKU_BARCODE= [BARCODE_SKU] FROM [SONDA].[SWIFT_VIEW_ALL_SKU] 
		WHERE @CODE_SKU = [CODE_SKU];

	SELECT @SOURCE_WAREHOUSE = [WAREHOUSE] ,@SOURCE_LOCATION = [LOCATION], @SOURCE_PALLET = [PALLET_ID] FROM [SONDA].[SWIFT_INVENTORY]
	WHERE [PALLET_ID] = @PALLET_ID



	SELECT @VALIDATE_PALLET = [SONDA].[SWIFT_FUNC_VALIDATE_PALLET_LOCATED] (@PALLET_ID)

		--
		IF (@VALIDATE_PALLET>=1)
			BEGIN
				SET @RESULT= 'Exito'		
				INSERT INTO [SONDA].[SWIFT_TXNS]
				([MANIFEST_SOURCE]
				,[SAP_REFERENCE]
				,[TASK_SOURCE_ID]
				,[TXN_TYPE]
				,[TXN_DESCRIPTION]
				,[TXN_CATEGORY]
				,[TXN_CREATED_STAMP]
				,[TXN_OPERATOR_ID]
				,[TXN_OPERATOR_NAME]
				,[TXN_CODE_SKU]
				,[TXN_DESCRIPTION_SKU]
				,[TXN_QTY]
				,[HEADER_REFERENCE]
				,[TXN_BARCODE_SKU]
				,[TXN_TARGET_CODE_WAREHOUSE]
				,[TXN_TARGET_CODE_LOCATION]
				,[TXN_SOURCE_CODE_WAREHOUSE]
				,[TXN_SOURCE_CODE_LOCATION]      
				,[TXN_SOURCE_PALLET_ID]
                ,[TXN_TARGET_PALLET_ID])
			VALUES
				(null
				,0
				,null
				,'PUTAWAY-RELOCATE'
				,'Reubicacion de Pallet'
				,'RL'
				,GETDATE()
				,@LAST_UPDATE_BY
				,@NAME_USER
				,@CODE_SKU
				,@DESCRIPTION_SKU
				,@QTY_TX
				,0
				,@TXN_SKU_BARCODE
				,@NEW_WAREHOUSE
				,@CODE_LOCATION
				,@SOURCE_WAREHOUSE 
				,@SOURCE_LOCATION 
				,@SOURCE_PALLET
				,@PALLET_ID)

			SELECT @TXN_ID =  SCOPE_IDENTITY()

			UPDATE [SONDA].[SWIFT_INVENTORY]
				SET  [LOCATION] = @CODE_LOCATION
				,[WAREHOUSE] = @NEW_WAREHOUSE
				,[LAST_UPDATE] = GETDATE()
				,[LAST_UPDATE_BY] = @LAST_UPDATE_BY
			WHERE [PALLET_ID] = @PALLET_ID

			EXEC [SONDA].[SWIFT_SP_LOCATE_PALLET] @LAST_UPDATE_BY,@CODE_LOCATION ,@PALLET_ID,@NEW_WAREHOUSE 

			SELECT
				@PALLET_ID AS PALLET_ID
				,@BATCHID AS BATCH_ID
				,@CODE_LOCATION AS LOCATION
				,@CODE_SKU AS SKU
				,@DESCRIPTION_SKU AS DESCRIPTION_SKU
				,@QTY_IN AS QTY

			COMMIT
		END
	ELSE
		BEGIN
			SET @ERROR = 'El Pallet no existe o esta ubicado'
    		RAISERROR (@ERROR,16,1)
		END
END TRY
BEGIN CATCH
    ROLLBACK
    SET @ERROR = ERROR_MESSAGE()
    RAISERROR (@ERROR,16,1)
END CATCH
