
-- =============================================
-- Autor:				ppablo.loukota
-- Fecha de Creacion: 	06-01-2016
-- Description:			Reubica el pallet 

/*
-- Ejemplo de Ejecucion:				
				--
EXECUTE  [SONDA].[SWIFT_SP_ALLOCATE_PALLET] 
   @TASK_ID = 7444
  ,@PALLET_ID = 1251  
  ,@CODE_LOCATION = '001'
  ,@LAST_UPDATE_BY = 'OPER1@SONDA'
  ,@TXN_DESCRIPTION = 'PICKING PARA Picking por venta'
  ,@TXN_CATEGORY = 'TW'
				--				
*/
-- =============================================
CREATE PROCEDURE [SONDA].[SWIFT_SP_ALLOCATE_PALLET]
     @TASK_ID AS INT
	,@PALLET_ID AS INT
	--,@CODE_WAREHOUSE AS VARCHAR(50)
	,@CODE_LOCATION AS VARCHAR(50)
	,@LAST_UPDATE_BY AS VARCHAR(50)
	,@TXN_DESCRIPTION AS VARCHAR(50)
	,@TXN_CATEGORY AS VARCHAR(25)
AS
BEGIN
BEGIN TRANSACTION 
BEGIN TRY

	SET NOCOUNT ON;

	DECLARE @CODE_SKU  VARCHAR(50) = NULL;
	DECLARE @BATCHID  INT = NULL;
	DECLARE @TXN_ID  INT = NULL;
	DECLARE @QTY_IN  FLOAT = NULL;
	DECLARE @QTY_TX  NUMERIC(18,2) = NULL;
	DECLARE @DESCRIPTION_SKU [VARCHAR](MAX) = NULL;
	--DECLARE @CODE_SKU [VARCHAR](50) = NULL;
	DECLARE @NAME_USER [VARCHAR](50) = NULL;
	DECLARE @ID  INT;
	DECLARE @TranInsertPallet VARCHAR(20);
    SELECT @TranInsertPallet = 'Transaccion de Pallet a inventario y pallet';
	DECLARE @TXN_SKU_BARCODE [varchar](50) = NULL;
    DECLARE @TXN_SKU_CLASSIFICATION [varchar](50) = NULL;
	DECLARE	@TXN_COSTUMER_CODE [varchar](250)= NULL;
	DECLARE @TXN_COSTUMER_NAME [varchar](25)= NULL;
	DECLARE @CODE_WAREHOUSE  VARCHAR(50)
	DECLARE @VALIDATE_PALLET AS BIT=0
	DECLARE @Result VARCHAR(250) = ''
	DECLARE @RECEPTION_HEADER INT = NULL;
	DECLARE @ERROR VARCHAR(1000)

	SELECT @BATCHID = [BATCH_ID], @QTY_IN = CONVERT(FLOAT, [QTY]), @QTY_TX = CONVERT(NUMERIC(18,2), [QTY])  FROM [SONDA].[SWIFT_PALLET] WHERE [PALLET_ID] = @PALLET_ID 

	SELECT @CODE_SKU = [SKU]  FROM [SONDA].[SWIFT_BATCH]  WHERE [BATCH_ID] = @BATCHID  

	SELECT @DESCRIPTION_SKU = [DESCRIPTION_SKU], @TXN_SKU_BARCODE= [BARCODE_SKU] FROM [SONDA].[SWIFT_VIEW_ALL_SKU] WHERE [CODE_SKU] = @CODE_SKU

	SELECT @NAME_USER = [NAME_USER] FROM [SONDA].[USERS] WHERE [LOGIN] = @LAST_UPDATE_BY

	SELECT @TXN_COSTUMER_CODE = [COSTUMER_CODE], @TXN_COSTUMER_NAME = [COSTUMER_NAME] FROM [SONDA].[SWIFT_TASKS] WHERE [TASK_ID] =  @TASK_ID

	SELECT @CODE_WAREHOUSE = [CODE_WAREHOUSE] FROM [SONDA].[SWIFT_LOCATIONS] WHERE [CODE_LOCATION] = @CODE_LOCATION

	SELECT @RECEPTION_HEADER = RECEPTION_NUMBER FROM [SONDA].[SWIFT_TASKS] WHERE TASK_ID = @TASK_ID
	
	SELECT @VALIDATE_PALLET = [SONDA].[SWIFT_FUNC_VALIDATE_PALLET](@TASK_ID,@CODE_SKU, @PALLET_ID)
		
	IF (@VALIDATE_PALLET = 1)	
	BEGIN
		SET @RESULT= 'Exito'
		--
		IF EXISTS (SELECT 1 
				   FROM SWIFT_RECEPTION_DETAIL 
				   WHERE RECEPTION_HEADER = @RECEPTION_HEADER
                   AND CODE_SKU = @CODE_SKU
		)
		BEGIN
			UPDATE [SONDA].SWIFT_RECEPTION_DETAIL
            SET 
				ALLOCATED        = ISNULL(ALLOCATED,0)+@QTY_IN
				,[LAST_UPDATE]  = CURRENT_TIMESTAMP
				,[LAST_UPDATE_BY] = @LAST_UPDATE_BY
            WHERE[RECEPTION_HEADER] = @RECEPTION_HEADER AND 
            CODE_SKU = @CODE_SKU
		END
		--
		INSERT INTO [SONDA].[SWIFT_TXNS]
			   ([MANIFEST_SOURCE]
			   ,[SAP_REFERENCE]
			   ,[TASK_SOURCE_ID]
			   ,[TXN_TYPE]
			   ,[TXN_DESCRIPTION]
			   ,[TXN_CATEGORY]
			   ,[TXN_CREATED_STAMP]
			   ,[TXN_OPERATOR_ID]
			   ,[TXN_OPERATOR_NAME]
			   ,[TXN_CODE_SKU]
			   ,[TXN_DESCRIPTION_SKU]
			   ,[TXN_QTY]
			   ,[HEADER_REFERENCE]
			   ,[TXN_TARGET_CODE_WAREHOUSE]
			   ,[TXN_TARGET_CODE_LOCATION]
			   ,[TXN_TARGET_PALLET_ID]
			   ,[TXN_BARCODE_SKU]
			--   ,[TXN_SKU_TYPE]
			   ,[TXN_COSTUMER_NAME]
			   ,[TXN_COSTUMER_CODE])
			VALUES
			   (null
			   ,0
			   ,@TASK_ID
			   ,'PUTAWAY'
			   ,@TXN_DESCRIPTION
			   ,@TXN_CATEGORY
			   ,GETDATE()
			   ,@LAST_UPDATE_BY
			   ,@NAME_USER
			   ,@CODE_SKU
			   ,@DESCRIPTION_SKU
			   ,@QTY_TX
			   ,0
			   ,@CODE_WAREHOUSE
     		   ,@CODE_LOCATION
			   ,@PALLET_ID
			   ,@TXN_SKU_BARCODE
			 --  ,NULL
			   ,@TXN_COSTUMER_NAME
			   ,@TXN_COSTUMER_CODE)
		   
		SELECT @TXN_ID =  SCOPE_IDENTITY()
			
		INSERT INTO [SONDA].[SWIFT_INVENTORY]
			([SERIAL_NUMBER] 
			,[WAREHOUSE]
			,[LOCATION]
			,[SKU] 
			,[SKU_DESCRIPTION]
			,[ON_HAND]
			,[BATCH_ID]
			,[LAST_UPDATE]
			,[LAST_UPDATE_BY]
			,[TXN_ID]
			,[IS_SCANNED]
			,[RELOCATED_DATE]
			,[PALLET_ID])
		VALUES
			(NULL
			,@CODE_WAREHOUSE
			,@CODE_LOCATION
			,@CODE_SKU
			,@DESCRIPTION_SKU
			,@QTY_IN
			,@BATCHID
			,GETDATE()
			,@LAST_UPDATE_BY
			,@TXN_ID
			,1
			,GETDATE()
			,@PALLET_ID)
		   
		EXEC [SONDA].[SWIFT_SP_LOCATE_PALLET] @LAST_UPDATE_BY,@CODE_LOCATION ,@PALLET_ID,@CODE_WAREHOUSE		
		COMMIT
	END
	ELSE
	BEGIN		
		SET @ERROR = 'Pallet no existe'
    	RAISERROR (@ERROR,16,1)		
	END	
END TRY
BEGIN CATCH
    ROLLBACK
    SET @ERROR =  ERROR_MESSAGE()
    RAISERROR (@ERROR,16,1)

END CATCH
END
