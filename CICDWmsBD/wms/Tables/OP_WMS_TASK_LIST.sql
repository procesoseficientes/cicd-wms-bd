CREATE TABLE [wms].[OP_WMS_TASK_LIST] (
    [SERIAL_NUMBER]                   NUMERIC (18)     IDENTITY (1, 1) NOT NULL,
    [WAVE_PICKING_ID]                 NUMERIC (18)     NULL,
    [TRANS_OWNER]                     NUMERIC (18)     NULL,
    [TASK_TYPE]                       VARCHAR (25)     NOT NULL,
    [TASK_SUBTYPE]                    VARCHAR (25)     NOT NULL,
    [TASK_OWNER]                      VARCHAR (25)     NOT NULL,
    [TASK_ASSIGNEDTO]                 VARCHAR (25)     NOT NULL,
    [TASK_COMMENTS]                   VARCHAR (150)    NULL,
    [ASSIGNED_DATE]                   DATETIME         NOT NULL,
    [QUANTITY_PENDING]                NUMERIC (18, 4)  NOT NULL,
    [QUANTITY_ASSIGNED]               NUMERIC (18, 4)  NOT NULL,
    [CODIGO_POLIZA_SOURCE]            VARCHAR (25)     NULL,
    [CODIGO_POLIZA_TARGET]            VARCHAR (25)     NULL,
    [LICENSE_ID_SOURCE]               NUMERIC (18)     NULL,
    [REGIMEN]                         VARCHAR (50)     NULL,
    [IS_COMPLETED]                    NUMERIC (18)     NULL,
    [IS_DISCRETIONAL]                 INT              NOT NULL,
    [IS_PAUSED]                       NUMERIC (18)     CONSTRAINT [DF_OP_WMS_TASK_LIST_IS_PAUSED] DEFAULT ((0)) NULL,
    [IS_CANCELED]                     NUMERIC (18)     CONSTRAINT [DF_OP_WMS_TASK_LIST_IS_CANCELED] DEFAULT ((0)) NULL,
    [MATERIAL_ID]                     VARCHAR (50)     NOT NULL,
    [BARCODE_ID]                      VARCHAR (50)     NOT NULL,
    [ALTERNATE_BARCODE]               VARCHAR (50)     NULL,
    [MATERIAL_NAME]                   VARCHAR (200)    NOT NULL,
    [WAREHOUSE_SOURCE]                VARCHAR (25)     NULL,
    [WAREHOUSE_TARGET]                VARCHAR (25)     NULL,
    [LOCATION_SPOT_SOURCE]            VARCHAR (25)     NULL,
    [LOCATION_SPOT_TARGET]            VARCHAR (25)     NULL,
    [CLIENT_OWNER]                    VARCHAR (25)     NULL,
    [CLIENT_NAME]                     VARCHAR (150)    NULL,
    [ACCEPTED_DATE]                   DATETIME         NULL,
    [COMPLETED_DATE]                  DATETIME         NULL,
    [CANCELED_DATETIME]               DATETIME         NULL,
    [CANCELED_BY]                     VARCHAR (25)     NULL,
    [MATERIAL_SHORT_NAME]             VARCHAR (200)    NULL,
    [IS_lOCKED]                       VARCHAR (1)      CONSTRAINT [DF_OP_WMS_TASK_LIST_IS_lOCKED] DEFAULT ((0)) NULL,
    [IS_DISCRETIONARY]                INT              DEFAULT ((0)) NOT NULL,
    [TYPE_DISCRETIONARY]              VARCHAR (100)    NULL,
    [LINE_NUMBER_POLIZA_SOURCE]       INT              DEFAULT ((0)) NULL,
    [LINE_NUMBER_POLIZA_TARGET]       INT              DEFAULT ((0)) NULL,
    [DOC_ID_SOURCE]                   NUMERIC (18)     NULL,
    [DOC_ID_TARGET]                   NUMERIC (18)     NULL,
    [IS_ACCEPTED]                     INT              CONSTRAINT [DF_OP_WMS_TASK_LIST_IS_ACCEPTED] DEFAULT ((0)) NULL,
    [IS_FROM_SONDA]                   INT              DEFAULT ((0)) NULL,
    [IS_FROM_ERP]                     INT              DEFAULT ((0)) NOT NULL,
    [PRIORITY]                        INT              DEFAULT ((1)) NOT NULL,
    [REPLENISH_MATERIAL_ID_TARGET]    VARCHAR (25)     NULL,
    [FROM_MASTERPACK]                 INT              DEFAULT ((0)) NOT NULL,
    [MASTER_PACK_CODE]                VARCHAR (50)     NULL,
    [OWNER]                           VARCHAR (50)     NULL,
    [SOURCE_TYPE]                     VARCHAR (50)     NULL,
    [TRANSFER_REQUEST_ID]             INT              NULL,
    [TONE]                            VARCHAR (20)     NULL,
    [CALIBER]                         VARCHAR (20)     NULL,
    [LICENSE_ID_TARGET]               INT              NULL,
    [IN_PICKING_LINE]                 INT              DEFAULT ((0)) NOT NULL,
    [IS_FOR_DELIVERY_IMMEDIATE]       INT              DEFAULT ((1)) NOT NULL,
    [QUANTITY_REPLENISHMENT]          NUMERIC (18, 4)  DEFAULT ((0)) NOT NULL,
    [DISPATCH_LICENSE_EXIT_COMPLETED] INT              DEFAULT ((0)) NULL,
    [DISPATCH_LICENSE_EXIT_DATETIME]  DATETIME         NULL,
    [DISPATCH_LICENSE_EXIT_BY]        VARCHAR (25)     NULL,
    [STATUS_CODE]                     VARCHAR (50)     NULL,
    [PROJECT_ID]                      UNIQUEIDENTIFIER NULL,
    [PROJECT_CODE]                    VARCHAR (50)     NULL,
    [PROJECT_NAME]                    VARCHAR (150)    NULL,
    [PROJECT_SHORT_NAME]              VARCHAR (25)     NULL,
    [ORDER_NUMBER]                    VARCHAR (25)     NULL,
    CONSTRAINT [PK_TASK_LIST_SERIAL_NUMBER] PRIMARY KEY CLUSTERED ([SERIAL_NUMBER] ASC) WITH (FILLFACTOR = 80),
    CONSTRAINT [CK_OP_WMS_TASK_LIST_PENDING_NEVER_NEGATIVE] CHECK ([QUANTITY_PENDING]>=(0))
);


GO
CREATE NONCLUSTERED INDEX [IX_OP_WMS_TASK_LIST_BY_ISCOM_TYPE_SUBTYPE]
    ON [wms].[OP_WMS_TASK_LIST]([IS_COMPLETED] ASC, [TASK_TYPE] ASC, [TASK_SUBTYPE] ASC)
    INCLUDE([QUANTITY_ASSIGNED], [SERIAL_NUMBER]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IX_OP_WMS_TASK_LIST_ASSIG_TO]
    ON [wms].[OP_WMS_TASK_LIST]([TASK_ASSIGNEDTO] ASC)
    INCLUDE([TASK_TYPE], [WAVE_PICKING_ID]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IX_OP_WMS_TASK_LIST_BY_POLIZAS]
    ON [wms].[OP_WMS_TASK_LIST]([CODIGO_POLIZA_TARGET] ASC, [CODIGO_POLIZA_SOURCE] ASC) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IX_OP_WMS_TASK_LIST_BY_ASSIG_DATE]
    ON [wms].[OP_WMS_TASK_LIST]([ASSIGNED_DATE] ASC) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST]
    ON [wms].[OP_WMS_TASK_LIST]([WAVE_PICKING_ID] ASC, [TASK_SUBTYPE] ASC, [LICENSE_ID_SOURCE] ASC, [MATERIAL_ID] ASC) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_CODIGO_POLIZA_SOURCE_TASK_TYPE]
    ON [wms].[OP_WMS_TASK_LIST]([CODIGO_POLIZA_SOURCE] ASC, [TASK_TYPE] ASC)
    INCLUDE([SERIAL_NUMBER]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_COMMITED_INVENTORY_BY_LICENCE]
    ON [wms].[OP_WMS_TASK_LIST]([TASK_TYPE] ASC, [IS_COMPLETED] ASC, [IS_PAUSED] ASC, [CANCELED_DATETIME] ASC)
    INCLUDE([CLIENT_OWNER], [LICENSE_ID_SOURCE], [MATERIAL_ID], [QUANTITY_PENDING], [WAREHOUSE_SOURCE]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST_WAVE_PICKING_ID_MATERIAL_ID]
    ON [wms].[OP_WMS_TASK_LIST]([WAVE_PICKING_ID] ASC, [MATERIAL_ID] ASC)
    INCLUDE([MATERIAL_NAME], [QUANTITY_PENDING], [TASK_OWNER], [WAREHOUSE_SOURCE]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST_WAVE_PICKING_ID_WAREHOUSE_SOURCE_COMPLETED_DATE_IS_COMPLETED]
    ON [wms].[OP_WMS_TASK_LIST]([WAVE_PICKING_ID] ASC, [WAREHOUSE_SOURCE] ASC, [COMPLETED_DATE] ASC, [IS_COMPLETED] ASC)
    INCLUDE([ASSIGNED_DATE], [CLIENT_OWNER]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST_IS_COMPLETED_COMPLETED_DATE]
    ON [wms].[OP_WMS_TASK_LIST]([IS_COMPLETED] ASC, [COMPLETED_DATE] ASC)
    INCLUDE([ASSIGNED_DATE], [WAREHOUSE_SOURCE], [WAVE_PICKING_ID]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST_WAVE_PICKING_ID]
    ON [wms].[OP_WMS_TASK_LIST]([WAVE_PICKING_ID] ASC)
    INCLUDE([LOCATION_SPOT_TARGET], [QUANTITY_ASSIGNED], [QUANTITY_PENDING], [SERIAL_NUMBER], [TASK_ASSIGNEDTO]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IDX_MATERIAL_ID_TASK_LIST]
    ON [wms].[OP_WMS_TASK_LIST]([MATERIAL_ID] ASC)
    INCLUDE([CANCELED_DATETIME], [QUANTITY_ASSIGNED]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST_LICENSE_ID_TARGET_TASK_TYPE]
    ON [wms].[OP_WMS_TASK_LIST]([LICENSE_ID_TARGET] ASC, [TASK_TYPE] ASC)
    INCLUDE([ALTERNATE_BARCODE], [BARCODE_ID], [CLIENT_NAME], [CLIENT_OWNER], [CODIGO_POLIZA_SOURCE], [CODIGO_POLIZA_TARGET], [IS_COMPLETED], [LICENSE_ID_SOURCE], [LOCATION_SPOT_SOURCE], [LOCATION_SPOT_TARGET], [MATERIAL_ID], [MATERIAL_NAME], [OWNER], [QUANTITY_ASSIGNED], [QUANTITY_PENDING], [SERIAL_NUMBER], [TASK_ASSIGNEDTO], [TASK_SUBTYPE], [WAREHOUSE_SOURCE], [WAREHOUSE_TARGET], [WAVE_PICKING_ID]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST_TASK_ASSIGNEDTO_IS_COMPLETED_IS_CANCELED_IN_PICKING_LINE]
    ON [wms].[OP_WMS_TASK_LIST]([TASK_ASSIGNEDTO] ASC, [IS_COMPLETED] ASC, [IS_CANCELED] ASC, [IN_PICKING_LINE] ASC) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [IN_OP_WMS_TASK_LIST_WAVE_PICKING_ID_IN_PICKING_LINE]
    ON [wms].[OP_WMS_TASK_LIST]([WAVE_PICKING_ID] ASC, [IN_PICKING_LINE] ASC)
    INCLUDE([COMPLETED_DATE], [IS_COMPLETED], [QUANTITY_PENDING], [TASK_ASSIGNEDTO], [TASK_COMMENTS]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [I_OP_WMS_TASK_LIST_TASK_TYPE]
    ON [wms].[OP_WMS_TASK_LIST]([TASK_TYPE] ASC)
    INCLUDE([SERIAL_NUMBER], [WAVE_PICKING_ID], [TASK_SUBTYPE], [TASK_OWNER], [TASK_ASSIGNEDTO], [TASK_COMMENTS], [ASSIGNED_DATE], [QUANTITY_PENDING], [QUANTITY_ASSIGNED], [CODIGO_POLIZA_TARGET], [REGIMEN], [IS_COMPLETED], [IS_PAUSED], [IS_CANCELED], [WAREHOUSE_SOURCE], [CLIENT_NAME], [ACCEPTED_DATE], [COMPLETED_DATE], [IS_DISCRETIONARY], [DOC_ID_SOURCE], [DOC_ID_TARGET], [IS_ACCEPTED], [IS_FROM_SONDA], [IS_FROM_ERP], [PRIORITY]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [I_OP_WMS_TASK_LIST_TASK_TYPE_2]
    ON [wms].[OP_WMS_TASK_LIST]([TASK_TYPE] ASC)
    INCLUDE([SERIAL_NUMBER], [WAVE_PICKING_ID], [TASK_SUBTYPE], [TASK_OWNER], [TASK_ASSIGNEDTO], [TASK_COMMENTS], [ASSIGNED_DATE], [QUANTITY_PENDING], [QUANTITY_ASSIGNED], [CODIGO_POLIZA_TARGET], [REGIMEN], [IS_COMPLETED], [IS_PAUSED], [IS_CANCELED], [MATERIAL_ID], [BARCODE_ID], [MATERIAL_NAME], [LOCATION_SPOT_TARGET], [CLIENT_OWNER], [CLIENT_NAME], [ACCEPTED_DATE], [COMPLETED_DATE], [IS_DISCRETIONARY], [DOC_ID_SOURCE], [DOC_ID_TARGET], [IS_ACCEPTED], [IS_FROM_SONDA], [IS_FROM_ERP], [PRIORITY]) WITH (FILLFACTOR = 80);


GO
CREATE NONCLUSTERED INDEX [I_OP_WMS_TASK_LIST_TASK_TYPE_3]
    ON [wms].[OP_WMS_TASK_LIST]([TASK_TYPE] ASC)
    INCLUDE([SERIAL_NUMBER], [WAVE_PICKING_ID], [TASK_SUBTYPE], [TASK_ASSIGNEDTO], [TASK_COMMENTS], [ASSIGNED_DATE], [CODIGO_POLIZA_TARGET], [REGIMEN], [IS_COMPLETED], [IS_PAUSED], [IS_CANCELED], [MATERIAL_ID], [WAREHOUSE_SOURCE], [CLIENT_NAME], [ACCEPTED_DATE], [COMPLETED_DATE], [IS_DISCRETIONARY], [DOC_ID_SOURCE], [DOC_ID_TARGET], [IS_ACCEPTED], [IS_FROM_SONDA], [IS_FROM_ERP], [PRIORITY]) WITH (FILLFACTOR = 80);

