
CREATE PROCEDURE [wms].[OP_WMS_SP_COUNTING]
	-- Add the parameters for the stored procedure here
	@pCOUNT_ID				int = null OUTPUT,
	@pCREATED_BY			varchar(25),
	@pCOUNT_TYPE			varchar(25),
	@pACCURACY				numeric(5,2),
	@pResult				varchar(250) OUTPUT
AS
BEGIN
	
	SET NOCOUNT ON;
	
	BEGIN TRY
	DECLARE @CLIENT_CODE VARCHAR(25)
	DECLARE @MATERIAL_ID VARCHAR(50)
	DECLARE @BARCODE_ID VARCHAR(50)
	DECLARE @MATERIAL_NAME VARCHAR(150)
	DECLARE @REGIMEN VARCHAR(50)
	DECLARE @CODIGO_POLIZA VARCHAR(25)
	DECLARE @CURRENT_LOCATION VARCHAR(25)
	DECLARE @WAREHOUSE_ID VARCHAR(25)
	DECLARE @TIPO VARCHAR(50)
	DECLARE @CLIENT_NAME VARCHAR(250)
	BEGIN TRAN
		
		IF NOT EXISTS(SELECT * FROM [wms].OP_WMS_COUNTING WHERE COUNT_ID = @pCOUNT_ID)
		  BEGIN
			INSERT INTO [wms].[OP_WMS_COUNTING]
           ([CREATED_BY]
           ,[CREATED_DATE]
           ,[COUNT_TYPE]
           ,[ACCURACY])
		   VALUES
           (@pCREATED_BY,CURRENT_TIMESTAMP,CASE  @pCOUNT_TYPE
											WHEN 'MATERIAL_ID' THEN 'PRODUCTO'
											WHEN 'CLIENT_CODE' THEN 'CLIENTE'
											WHEN 'CODIGO_POLIZA' THEN 'POLIZA'
											WHEN 'REGIMEN' THEN 'REGIMEN'
											WHEN 'WAREHOUSE_ID' THEN 'BODEGA'
											WHEN 'COMPLETO' THEN 'COMPLETO'
										    END,0);
           
           SET @pCOUNT_ID = SCOPE_IDENTITY()
          END
       ELSE
			BEGIN
				UPDATE [wms].[OP_WMS_COUNTING]
				SET [CREATED_BY] = @pCREATED_BY
				,[COUNT_TYPE] = CASE  @pCOUNT_TYPE
											WHEN 'MATERIAL_ID' THEN 'PRODUCTO'
											WHEN 'CLIENT_CODE' THEN 'CLIENTE'
											WHEN 'CODIGO_POLIZA' THEN 'POLIZA'
											WHEN 'REGIMEN' THEN 'REGIMEN'
											WHEN 'WAREHOUSE_ID' THEN 'BODEGA'
											WHEN 'COMPLETO' THEN 'COMPLETO'
										    END
				,[ACCURACY] = @pACCURACY
				WHERE COUNT_ID = @pCOUNT_ID;
			END
	 DECLARE TASK_CURSOR CURSOR FOR
	 SELECT CLIENT_CODE,MATERIAL_ID,BARCODE_ID,MATERIAL_NAME,REGIMEN,CODIGO_POLIZA,CURRENT_LOCATION FROM [wms].OP_WMS_TEMP_TOCOUNT
	 
	 OPEN TASK_CURSOR;
	 FETCH NEXT FROM TASK_CURSOR INTO @CLIENT_CODE,@MATERIAL_ID,@BARCODE_ID,@MATERIAL_NAME,@REGIMEN,@CODIGO_POLIZA,@CURRENT_LOCATION;
	 WHILE @@FETCH_STATUS = 0
		BEGIN
		SELECT @CLIENT_NAME = CLIENT_NAME FROM [wms].OP_WMS_VIEW_CLIENTS where CLIENT_CODE = @CLIENT_CODE COLLATE DATABASE_DEFAULT
		
		INSERT INTO [wms].[OP_WMS_TASK_LIST_COUNTING]
           ([COUNT_ID],[COUNT_TYPE],[COUNT_REGIMEN],[COUNT_CLIENT_OWNER]
           ,[CREATED_DATE],[EXPECTED_LOCATION_SPOT],[EXPECTED_MATERIAL_ID]
           ,[MATERIAL_NAME],COUNT_CLIENT_NAME)
         VALUES
		   (@pCOUNT_ID,CASE  @pCOUNT_TYPE
											WHEN 'MATERIAL_ID' THEN 'PRODUCTO'
											WHEN 'CLIENT_CODE' THEN 'CLIENTE'
											WHEN 'CODIGO_POLIZA' THEN 'POLIZA'
											WHEN 'REGIMEN' THEN 'REGIMEN'
											WHEN 'WAREHOUSE_ID' THEN 'BODEGA'
											WHEN 'COMPLETO' THEN 'COMPLETO'
										    END,
			@REGIMEN,@CLIENT_CODE,GETDATE(),@CURRENT_LOCATION,@MATERIAL_ID,@MATERIAL_NAME,@CLIENT_NAME);
		   
		   FETCH NEXT FROM TASK_CURSOR INTO @CLIENT_CODE,@MATERIAL_ID,@BARCODE_ID,@MATERIAL_NAME,@REGIMEN,@CODIGO_POLIZA,@CURRENT_LOCATION;
		 END
		 
		 CLOSE TASK_CURSOR;
	     DEALLOCATE TASK_CURSOR;
	 COMMIT TRAN
	 --BORRAMOS LOS DATOS TEMPORALES INSERTADOS POR EL WS
	 DELETE [wms].OP_WMS_TEMP_TOCOUNT;
	SELECT @PRESULT = 'OK';
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		SELECT @PRESULT = ERROR_MESSAGE();
	END CATCH
END