--==============================================================================
--Autor:					Elder Lucas
--Fecha de creación:		30 de octubre 2022	
--Descripción:				SP que inserta en la task list las licencias escogidas por las función 
--							[wms].[OP_WMS_FN_GET_LICENSE_TO_PICK_PER_CHANNEL]

--Mofificación:				Elder Lucas
--Fecha:					8 de noviembre 2022
--Descripción:				Se agrega manejo de varchar con lineas de documentos cantidades, se agregan 3 casos de manejo de ordenes consolidadas

--Modificación:				Elder Lucas
--Fecha:					10 de noviembre 2022
--Descripción:				Arreglo de bucle cuando son tareas no consolidadas, manejo de tareas de egreso general
--==============================================================================
CREATE PROCEDURE [wms].[OP_WMS_SP_INSERT_TASKS_GENERAL_PICKING_DEMAND_PER_CHANNEL](
		 @TASK_OWNER VARCHAR(25)
		,@TASK_ASSIGNEDTO VARCHAR(25)
		,@QUANTITY_ASSIGNED NUMERIC(18, 4)
		,@CODIGO_POLIZA_TARGET VARCHAR(25)
		,@MATERIAL_ID VARCHAR(50)
		,@BARCODE_ID VARCHAR(50)
		,@ALTERNATE_BARCODE VARCHAR(50) = ''
		,@MATERIAL_NAME VARCHAR(200)
		,@CLIENT_OWNER VARCHAR(25)
		,@CLIENT_NAME VARCHAR(150)
		,@IS_FROM_SONDA INT = 0
		,@CODE_WAREHOUSE VARCHAR(50)
		,@IS_FROM_ERP INT
		,@WAVE_PICKING_ID INT = 0
		,@DOC_ID_TARGET INT
		,@LOCATION_SPOT_TARGET VARCHAR(25)
		,@IS_CONSOLIDATED INT = 0
		,@FROM_MASTERPACK INT = 0
		,@SOURCE_TYPE VARCHAR(50) = NULL
		,@TRANSFER_REQUEST_ID INT = 0
		,@TONE VARCHAR(20) = NULL
		,@CALIBER VARCHAR(20) = NULL
		,@IN_PICKING_LINE INT = 0
		,@IS_FOR_DELIVERY_IMMEDIATE INT
		,@PRIORITY INT = 1
		,@PICKING_HEADER_ID INT = NULL
		,@STATUS_CODE VARCHAR(50) = NULL
		,@ORDER_NUMBER VARCHAR(25)
		,@MIN_DAYS_EXPIRATION_DATE INT = 0
		,@DOC_NUM VARCHAR(50) = NULL
		,@LICENSE_ID_TO_EXCLUDE INT = -1
		,@DOCS_AND_QTYS VARCHAR(MAX) = ''
)
AS BEGIN
DECLARE
		@WPI NUMERIC(18, 0)
		,@ASSIGNED_DATE DATETIME
		,@CURRENT_LOCATION VARCHAR(25)
		,@CURRENT_WAREHOUSE VARCHAR(25)
		,@LICENSE_ID NUMERIC(18, 0)
		,@TASK_COMMENTS VARCHAR(150)
		,@PRESULT VARCHAR(max)
		,@CODIGO_POLIZA_SOURCE VARCHAR(25)
		,@QUANTITY_PENDING NUMERIC(18, 4)
		,@HAVBATCH NUMERIC(18) = 0
		,@vCURRENT_ASSIGNED NUMERIC(18, 4)
		,@IS_MASTER_PACK INT = 0
		,@ASSEMBLY_QTY INT = 0
		,@AVAILABLE_QTY NUMERIC(18, 4) = 0
		,@ASSEMBLED_QTY INT = 0
		,@QUERY NVARCHAR(MAX)
		,@IN_PICKING_LINE_ORIGINAL INT = @IN_PICKING_LINE
		,@TASK_ASSIGNEDTO_ORIGINAL VARCHAR(25) = @TASK_ASSIGNEDTO
		,@TASK_TYPE VARCHAR(25) = 'TAREA_PICKING'
		,@TASK_SUBTYPE VARCHAR(25) = ''
		,@DISPATCH_BY_STATUS INT = 0
		,@QTY_AVAILABLE_FROM_LICENSE_PROYECT NUMERIC(18, 4)
		,@PROCESS_COMPONENTS_IF_MP INT = 0 --Procesar componentes si el material es masterpack
		,@CURRENT_LICENSE_QTY NUMERIC(18,6) = 0
		,@CURRENT_QTY_IN_DOC NUMERIC(18,6) = 0
		,@QTY_FOR_CONSOLIDATED_DOCS NUMERIC(18,6) = 0;

DECLARE @PROCESSED_LICENSES TABLE
(
	 CURRENT_LOCATION VARCHAR(25)
	,CURRENT_WAREHOUSE VARCHAR(25)
	,LICENSE_ID INT
	,CODIGO_POLIZA VARCHAR(25)
	,QTY NUMERIC(18,6)
	,FECHA_DOCUMENTO DATETIME
	,ALLOW_FAST_PICKING INT
)

DECLARE @DOCS TABLE(
	 ID INT
	,DOC_ID VARCHAR(50)
	,QTY NUMERIC(18,6)
)
DECLARE @CURRENT_ID INT
	BEGIN TRY
		--BEGIN TRANSACTION INSERT_TASK_PER_CHANNEL
		
		-- Obtenemos parámetro
		PRINT 'Obtenemos parámetro'
		SELECT
			@DISPATCH_BY_STATUS = CONVERT(INT, [P].[VALUE])
		FROM
			[wms].[OP_WMS_PARAMETER] [P]
		WHERE
			[P].[GROUP_ID] = 'PICKING_DEMAND' AND [P].[PARAMETER_ID] = 'DISPATCH_BY_STATUS';

		--Obtenemos tipo y subtipo de tarea
		SELECT
			 @ASSIGNED_DATE = GETDATE()
			,@TASK_TYPE = CASE	
								WHEN @IS_FOR_DELIVERY_IMMEDIATE = 0
									THEN 'TAREA_REUBICACION'
								ELSE 'TAREA_PICKING'
						  END
			,@TASK_SUBTYPE = CASE	
								WHEN @IS_CONSOLIDATED = 1 AND @IS_FOR_DELIVERY_IMMEDIATE = 1
									THEN 'DESPACHO_CONSOLIDADO'
								WHEN @IS_CONSOLIDATED = 0 AND @IS_FOR_DELIVERY_IMMEDIATE = 1
									THEN 'DESPACHO_GENERAL'
								WHEN @IS_FOR_DELIVERY_IMMEDIATE = 0
									THEN 'ENTREGA_NO_INMEDIATA'
								ELSE @TASK_SUBTYPE
							 END
			,@QUANTITY_PENDING = @QUANTITY_ASSIGNED;
        
		SELECT
			@TASK_SUBTYPE = CASE	
								WHEN @IS_FOR_DELIVERY_IMMEDIATE = 0
								THEN 'ENTREGA_NO_INMEDIATA'
								WHEN @IS_FOR_DELIVERY_IMMEDIATE = 1 AND ISNULL(@PICKING_HEADER_ID, 0) > 0
								THEN 'INVENTARIO_PREPARADO'
								WHEN (@SOURCE_TYPE = 'WT - SWIFT' OR @SOURCE_TYPE = 'WT - ERP') AND @IS_FOR_DELIVERY_IMMEDIATE = 1
								THEN 'DESPACHO_WT'
								ELSE @TASK_SUBTYPE
							END;
		--CASO PARA EGRESO GENERAL
		IF(@SOURCE_TYPE = 'EGRESO_GENERAL')
		BEGIN
			SET @TASK_SUBTYPE = 'DESPACHO_GENERAL'
		END
		SELECT TOP 1
			@TASK_ASSIGNEDTO = CASE	WHEN [USE_PICKING_LINE] = 0
										THEN ''
									ELSE @TASK_ASSIGNEDTO
								END
		FROM
			[wms].[OP_WMS_MATERIALS]
		WHERE
			[MATERIAL_ID] = @MATERIAL_ID;


		--Asignamos numero de ola de picking
		PRINT 'Asignamos numero de ola de picking'
		IF (@WAVE_PICKING_ID = 0)
		BEGIN
			SELECT @WAVE_PICKING_ID = NEXT VALUE FOR [wms].[OP_WMS_SEQ_WAVE_PICKING_ID];
		END
		SET @WPI = @WAVE_PICKING_ID;

		--Obtenemos la cantidad para materiales con y sin fecha de vencimiento
		SELECT 
			@AVAILABLE_QTY = ISNULL(SUM(VPAGB.QTY), 0)
		FROM WMS.OP_WMS_VIEW_PICKING_AVAILABLE_GENERAL_BATCH VPAGB
					INNER JOIN WMS.OP_WMS_SHELF_SPOTS SS ON VPAGB.CURRENT_LOCATION = SS.LOCATION_SPOT
		WHERE CURRENT_WAREHOUSE = @CODE_WAREHOUSE AND MATERIAL_ID = @MATERIAL_ID
				AND STATUS_CODE = @STATUS_CODE AND LICENSE_ID <> -1
				AND CAST(DATEADD(DAY, @MIN_DAYS_EXPIRATION_DATE, GETDATE()) AS DATE) < DATE_EXPIRATION

		PRINT '@AVAILABLE_QTY BATCH'
		PRINT @AVAILABLE_QTY

		SELECT
			@AVAILABLE_QTY = @AVAILABLE_QTY + ISNULL(SUM(VPAG.QTY), 0)
		FROM WMS.OP_WMS_VIEW_PICKING_AVAILABLE_GENERAL VPAG
		INNER JOIN WMS.OP_WMS_SHELF_SPOTS SS ON VPAG.CURRENT_LOCATION = SS.LOCATION_SPOT
		WHERE CURRENT_WAREHOUSE = @CODE_WAREHOUSE AND MATERIAL_ID = @MATERIAL_ID
			AND STATUS_CODE = @STATUS_CODE AND LICENSE_ID <> -1
			AND VPAG.QTY > 0
			AND VPAG.BATCH_REQUESTED = 0
			
		PRINT '@AVAILABLE_QTY'
		PRINT @AVAILABLE_QTY
		--select 0/0
		IF(@QUANTITY_ASSIGNED > @AVAILABLE_QTY)
		BEGIN
		PRINT 'ERROR DE CANTIDADES'
		SET @PRESULT = CONCAT('ERROR: No se encontró suficiente inventario para el material: ', @MATERIAL_ID, ', TOLERANCIA: ', @MIN_DAYS_EXPIRATION_DATE, ' días. Inventario actual ',  @AVAILABLE_QTY)
			RAISERROR(@PRESULT, 16, 1);
		END

		--Identificamos si el material es de masterpack

		SELECT TOP 1
		 @IS_MASTER_PACK = [IS_MASTER_PACK]
		,@IN_PICKING_LINE = CASE	
								WHEN @IN_PICKING_LINE = 1 AND [USE_PICKING_LINE] = 1
									THEN 1
								ELSE 0
							 END
		FROM
			[wms].[OP_WMS_MATERIALS]
		WHERE
			[MATERIAL_ID] = @MATERIAL_ID
			AND [CLIENT_OWNER] = @CLIENT_OWNER;

		IF(@IS_MASTER_PACK = 1 AND @PROCESS_COMPONENTS_IF_MP = 1)
		BEGIN
			SELECT
				 @MATERIAL_ID = CBMP.COMPONENT_MATERIAL
				,@BARCODE_ID = M.BARCODE_ID
				,@ALTERNATE_BARCODE = ISNULL(M.ALTERNATE_BARCODE, '')
				,@MATERIAL_NAME = M.MATERIAL_NAME
				,@QUANTITY_PENDING = @QUANTITY_PENDING * CBMP.QTY
				,@QUANTITY_ASSIGNED = @QUANTITY_ASSIGNED * CBMP.QTY
			FROM WMS.OP_WMS_COMPONENTS_BY_MASTER_PACK CBMP
			INNER JOIN WMS.OP_WMS_MATERIALS M ON M.MATERIAL_ID = CBMP.COMPONENT_MATERIAL
			WHERE CBMP.MASTER_PACK_CODE = @MATERIAL_ID
				
				PRINT 'Era masterpack'
				PRINT @MATERIAL_ID
				PRINT @BARCODE_ID
				PRINT @ALTERNATE_BARCODE 
				PRINT @MATERIAL_NAME
				PRINT @QUANTITY_PENDING 
				PRINT @QUANTITY_ASSIGNED
		END

	--Seleccionamos las licencias


	INSERT	INTO @PROCESSED_LICENSES
					(
						 CURRENT_LOCATION
						,CURRENT_WAREHOUSE
						,LICENSE_ID
						,CODIGO_POLIZA
						,QTY
						,FECHA_DOCUMENTO
						,ALLOW_FAST_PICKING
					)
			SELECT
				 [CURRENT_LOCATION]
				,[CURRENT_WAREHOUSE]
				,[LICENSE_ID]
				,[CODIGO_POLIZA]
				,[QTY]
				,[FECHA_DOCUMENTO]
				,[ALLOW_FAST_PICKING]
			FROM
				[wms].[OP_WMS_FN_GET_LICENSE_TO_PICK_PER_CHANNEL]
										  (
											@MATERIAL_ID,
											@CODE_WAREHOUSE,
											@QUANTITY_ASSIGNED,
											@HAVBATCH,
											@STATUS_CODE,
											@MIN_DAYS_EXPIRATION_DATE,
											NULL
										  );
		--OBTENEMOS EL LISTADO DE DOCUMENTOS Y CANTIDADES SI LA ORDEN ES CONSOLIDADA
		IF(@IS_CONSOLIDATED = 1 AND @DOCS_AND_QTYS <> '')
		BEGIN
			SELECT [ID], [value]  INTO #FIELDS FROM wms.OP_WMS_FN_SPLIT(@DOCS_AND_QTYS,',')
			WHILE EXISTS(SELECT TOP 1 1 FROM #FIELDS)
			BEGIN
				SET @CURRENT_ID = (SELECT TOP 1 ID FROM #FIELDS)
				IF((@CURRENT_ID%2) = 1)
				BEGIN
					INSERT INTO @DOCS
					SELECT TOP 1 ID, [VALUE], 0 FROM #FIELDS
				END
				ELSE
				BEGIN
				PRINT @CURRENT_ID
					UPDATE D SET D.QTY = F.[VALUE] FROM @DOCS D JOIN #FIELDS F ON F.ID = @CURRENT_ID AND D.ID = @CURRENT_ID -1
				END

				DELETE TOP (1) FROM #FIELDS
			END

			--SELECT 16%2

			DELETE FROM @DOCS WHERE QTY = 0
			DROP TABLE #FIELDS
		END
		
		--INSERTAMOS LAS LICENCIAS EN LA TASK_LIST
		WHILE EXISTS(SELECT TOP 1 1 FROM @PROCESSED_LICENSES)
		BEGIN
			SELECT TOP 1 @CURRENT_LICENSE_QTY = QTY FROM @PROCESSED_LICENSES
			WHILE (@CURRENT_LICENSE_QTY > 0)
			BEGIN
				IF(@IS_CONSOLIDATED = 1 AND @DOCS_AND_QTYS <> '')
				BEGIN
					PRINT CONCAT('INICIA PROCESO PARA CONSOLIDADOS CON CANTIDAD EN LICENCIA: ', + CAST(@CURRENT_LICENSE_QTY AS VARCHAR))
					SELECT TOP 1
					@CURRENT_QTY_IN_DOC = QTY,
					@DOC_NUM = DOC_ID
					FROM @DOCS WHERE QTY > 0
					IF((@CURRENT_LICENSE_QTY > @CURRENT_QTY_IN_DOC))
					BEGIN
					PRINT CONCAT('CASO CONSOLIDADO 1 CANTIDAD DOCUMENTO: ', CAST(@CURRENT_QTY_IN_DOC AS VARCHAR))
						SET @QTY_FOR_CONSOLIDATED_DOCS = @CURRENT_QTY_IN_DOC
						SET @CURRENT_LICENSE_QTY = @CURRENT_LICENSE_QTY - @CURRENT_QTY_IN_DOC
						UPDATE TOP (1) @PROCESSED_LICENSES SET QTY = @CURRENT_LICENSE_QTY
						UPDATE TOP (1) @DOCS SET QTY = 0 WHERE QTY > 0
						PRINT '@QTY_FOR_CONSOLIDATED_DOCS'
						PRINT @QTY_FOR_CONSOLIDATED_DOCS
						PRINT '@CURRENT_LICENSE_QTY'
						PRINT  @CURRENT_LICENSE_QTY
					END
					ELSE IF(@CURRENT_LICENSE_QTY < @CURRENT_QTY_IN_DOC)
					BEGIN
					PRINT CONCAT('CASO CONSOLIDADO 2 CANTIDAD DOCUMENTO: ', CAST(@CURRENT_QTY_IN_DOC AS VARCHAR))
						SET @QTY_FOR_CONSOLIDATED_DOCS = @CURRENT_LICENSE_QTY
						SET @CURRENT_LICENSE_QTY = 0
						UPDATE TOP (1) @PROCESSED_LICENSES SET QTY = 0
						UPDATE TOP (1) @DOCS SET QTY = @CURRENT_QTY_IN_DOC - @QTY_FOR_CONSOLIDATED_DOCS WHERE QTY > 0
						PRINT '@QTY_FOR_CONSOLIDATED_DOCS'
						PRINT @QTY_FOR_CONSOLIDATED_DOCS
						PRINT '@CURRENT_LICENSE_QTY'
						PRINT  @CURRENT_LICENSE_QTY
					END
					ELSE
					BEGIN
					PRINT CONCAT('CASO CONSOLIDADO 3 CANTIDAD DOCUMENTO: ', CAST(@CURRENT_QTY_IN_DOC AS VARCHAR))
						SET @QTY_FOR_CONSOLIDATED_DOCS = @CURRENT_LICENSE_QTY
						SET @CURRENT_LICENSE_QTY = 0
						UPDATE TOP (1) @PROCESSED_LICENSES SET QTY = 0
						UPDATE TOP (1) @DOCS SET QTY = 0 WHERE QTY > 0
						PRINT '@QTY_FOR_CONSOLIDATED_DOCS'
						PRINT @QTY_FOR_CONSOLIDATED_DOCS
						PRINT '@CURRENT_LICENSE_QTY'
						PRINT  @CURRENT_LICENSE_QTY
					END
					
				END
				ELSE
				BEGIN
					SET @CURRENT_LICENSE_QTY = 0
				END

				INSERT	INTO [wms].[OP_WMS_TASK_LIST]
							(
								[WAVE_PICKING_ID]
								,[TASK_TYPE]
								,[TASK_SUBTYPE]
								,[TASK_OWNER]
								,[TASK_ASSIGNEDTO]
								,[ASSIGNED_DATE]
								,[QUANTITY_PENDING]
								,[QUANTITY_ASSIGNED]
								,[CODIGO_POLIZA_SOURCE]
								,[CODIGO_POLIZA_TARGET]
								,[LICENSE_ID_SOURCE]
								,[REGIMEN]
								,[IS_DISCRETIONAL]
								,[MATERIAL_ID]
								,[BARCODE_ID]
								,[ALTERNATE_BARCODE]
								,[MATERIAL_NAME]
								,[WAREHOUSE_SOURCE]
								,[LOCATION_SPOT_SOURCE]
								,[CLIENT_OWNER]
								,[CLIENT_NAME]
								,[TASK_COMMENTS]
								,[TRANS_OWNER]
								,[IS_COMPLETED]
								,[MATERIAL_SHORT_NAME]
								,[IS_FROM_SONDA]
								,[IS_FROM_ERP]
								,[DOC_ID_SOURCE]
								,[DOC_ID_TARGET]
								,[LOCATION_SPOT_TARGET]
								,[SOURCE_TYPE]
								,[TRANSFER_REQUEST_ID]
								,[TONE]
								,[CALIBER]
								,[IN_PICKING_LINE]
								,[IS_FOR_DELIVERY_IMMEDIATE]
								,[PRIORITY]
								,[FROM_MASTERPACK]
								,[STATUS_CODE]
								,[PROJECT_ID]
								,[PROJECT_CODE]
								,[PROJECT_NAME]
								,[PROJECT_SHORT_NAME]
								,[ORDER_NUMBER]
								,[HANDLED_PER_CHANNEL]
							)
				SELECT TOP 1
							 @WAVE_PICKING_ID	--[WAVE_PICKING_ID]
							,@TASK_TYPE	--[TASK_TYPE]
							,@TASK_SUBTYPE	--[TASK_SUBTYPE]
							,@TASK_OWNER	--[TASK_OWNER]
							,@TASK_ASSIGNEDTO	--[TASK_ASSIGNEDTO]
							,@ASSIGNED_DATE	--[ASSIGNED_DATE]
							,IIF(@QTY_FOR_CONSOLIDATED_DOCS > 0, @QTY_FOR_CONSOLIDATED_DOCS, PL.QTY)	--[QUANTITY_PENDING]
							,IIF(@QTY_FOR_CONSOLIDATED_DOCS > 0, @QTY_FOR_CONSOLIDATED_DOCS, PL.QTY) --PL.QTY	--[QUANTITY_ASSIGNED]
							,PL.CODIGO_POLIZA	--[CODIGO_POLIZA_SOURCE]
							,@CODIGO_POLIZA_TARGET	--[CODIGO_POLIZA_TARGET]
							,PL.LICENSE_ID	--[LICENSE_ID_SOURCE]
							,'GENERAL'	--[REGIMEN]
							,1	--[IS_DISCRETIONAL]
							,@MATERIAL_ID	--[MATERIAL_ID]
							,@BARCODE_ID	--[BARCODE_ID]
							,@ALTERNATE_BARCODE	--[ALTERNATE_BARCODE]
							,@MATERIAL_NAME	--[MATERIAL_NAME]
							,PL.CURRENT_WAREHOUSE	--[WAREHOUSE_SOURCE]
							,PL.CURRENT_LOCATION	--[LOCATION_SPOT_SOURCE]
							,@CLIENT_OWNER	--[CLIENT_OWNER]
							,@CLIENT_NAME	--[CLIENT_NAME]
							,CONCAT('OLA DE PICKING #', CAST(@WAVE_PICKING_ID AS VARCHAR))	--[TASK_COMMENTS]
							,0	--[TRANS_OWNER]
							,0	--[IS_COMPLETED]
							,@MATERIAL_NAME	--[MATERIAL_SHORT_NAME]
							,@IS_FROM_SONDA	--[IS_FROM_SONDA]
							,@IS_FROM_ERP	--[IS_FROM_ERP]
							,@DOC_NUM --[DOC_ID_SOURCE]
							,@DOC_ID_TARGET	--[DOC_ID_TARGET]
							,@LOCATION_SPOT_TARGET	--[LOCATION_SPOT_TARGET]
							,@SOURCE_TYPE	--[SOURCE_TYPE]
							,@TRANSFER_REQUEST_ID	--[TRANSFER_REQUEST_ID]
							,@TONE	--[TONE]
							,@CALIBER	--[CALIBER]
							,@IN_PICKING_LINE	--[IN_PICKING_LINE]
							,@IS_FOR_DELIVERY_IMMEDIATE	--[IS_FOR_DELIVERY_IMMEDIATE]
							,@PRIORITY	--[PRIORITY]
							,@FROM_MASTERPACK	--[FROM_MASTERPACK]
							,@STATUS_CODE	--[STATUS_CODE]
							,NULL	--[PROJECT_ID]
							,0	--[PROJECT_CODE]
							,''	--[PROJECT_NAME]
							,''	--[PROJECT_SHORT_NAME]
							,@ORDER_NUMBER	--[ORDER_NUMBER]
							,1 --[HANDLED_PER_CHANNEL]

				FROM @PROCESSED_LICENSES PL
				SELECT
					@QTY_FOR_CONSOLIDATED_DOCS = 0,
					--@CURRENT_LICENSE_QTY = 0,
					@CURRENT_QTY_IN_DOC = 0
			END

			DELETE TOP (1) FROM @PROCESSED_LICENSES
		END
		

		--COMMIT TRANSACTION INSERT_TASK_PER_CHANNEL
		SELECT
			1 AS [Resultado]
			,'Proceso Exitoso' [Mensaje]
			,0 [Codigo]
			,CAST(@WAVE_PICKING_ID AS VARCHAR) + '|'
			+ CAST(@ASSEMBLED_QTY AS VARCHAR) [DbData];
	END TRY
	BEGIN CATCH
		--ROLLBACK TRANSACTION INSERT_TASK_PER_CHANNEL
		SELECT
			-1 AS [Resultado]
			,ERROR_MESSAGE() [Mensaje]
			,@@ERROR [Codigo]
			,'' [DbData];
	END CATCH
END