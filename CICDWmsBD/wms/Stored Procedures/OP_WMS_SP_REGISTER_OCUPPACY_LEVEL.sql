


CREATE PROCEDURE [wms].[OP_WMS_SP_REGISTER_OCUPPACY_LEVEL]
	-- Add the parameters for the stored procedure here
           @pSOURCE_LOCATION			varchar(25)
           ,@pLOGIN_ID					varchar(25)
           ,@pOCCUPANCY_LEVEL			numeric(18,2)
           ,@pRESULT					varchar(300) OUTPUT
AS
BEGIN
	
	SET NOCOUNT ON;
		
	DECLARE @ErrorMessage NVARCHAR(4000);
	DECLARE @ErrorSeverity INT;
	DECLARE @ErrorState INT;
	DECLARE @pINPUT_DATE date;
	DECLARE @pWAREHOUSE_PARENT VARCHAR(25);
	DECLARE @pZONE VARCHAR(25);
	DECLARE @pSPOT_TYPE VARCHAR(25);
	
	BEGIN TRY
	
	SELECT @pINPUT_DATE = GETDATE();
	
	SELECT @pWAREHOUSE_PARENT = (SELECT WAREHOUSE_PARENT FROM [wms].OP_WMS_SHELF_SPOTS 
				WHERE LOCATION_SPOT = @pSOURCE_LOCATION)
	
	SELECT @pZONE = (SELECT ZONE FROM [wms].OP_WMS_SHELF_SPOTS 
				WHERE LOCATION_SPOT = @pSOURCE_LOCATION)

	SELECT @pSPOT_TYPE = (SELECT SPOT_TYPE FROM [wms].OP_WMS_SHELF_SPOTS 
				WHERE LOCATION_SPOT = @pSOURCE_LOCATION)

	IF @pOCCUPANCY_LEVEL < 0 OR @pOCCUPANCY_LEVEL > 100 BEGIN
		SELECT @pRESULT = 'ERROR, VALOR DE OCUPACION ES INVALIDO (RANGO PERMINITO DE 0 A 100)'
		RETURN -98
	END

	IF (@pOCCUPANCY_LEVEL = 0) AND 
		EXISTS(SELECT 1 FROM [wms].OP_WMS_VIEW_INVENTORY_DETAIL WHERE CURRENT_LOCATION = @pSOURCE_LOCATION AND QTY >0 )
	BEGIN
		SELECT @pRESULT = 'ERROR, UBICACION TIENE INVENTARIO REGISTRADO, NO PUEDE TENER NIVEL DE OCUPACION CERO'
		RETURN -98		
	END

	--IF (@pOCCUPANCY_LEVEL >= 1) AND 
	--	NOT EXISTS(SELECT 1 FROM wms.OP_WMS_VIEW_INVENTORY_DETAIL WHERE CURRENT_LOCATION = @pSOURCE_LOCATION  AND QTY >0)
	--BEGIN
	--	SELECT @pRESULT = 'ERROR, UBICACION NO TIENE INVENTARIO REGISTRADO, NO PUEDE TENER NIVEL DE OCUPACION MAYOR A CERO'
	--	RETURN -98		
	--END

	IF NOT EXISTS(
		SELECT 1 FROM [wms].OP_WMS_OCCUPANCY_LEVEL
		WHERE  INPUT_DATE = @pINPUT_DATE AND LOCATION_SPOT= UPPER(@pSOURCE_LOCATION)) 
	BEGIN
		INSERT INTO [wms].[OP_WMS_OCCUPANCY_LEVEL]
		   ([INPUT_DATE]
		   ,[LOCATION_SPOT]
		   ,[WAREHOUSE_PARENT]
		   ,[SPOT_TYPE]
		   ,[OCCUPANCY_LEVEL]
		   ,[LAST_UPDATED]
		   ,[LAST_UPDATED_BY])
		 VALUES
		   (GETDATE()
		   ,UPPER(@pSOURCE_LOCATION)
		   ,@pWAREHOUSE_PARENT
		   ,@pSPOT_TYPE
		   ,@pOCCUPANCY_LEVEL
		   ,CURRENT_TIMESTAMP
		   ,@pLOGIN_ID)
		   
	END
	ELSE 
		BEGIN
	
			UPDATE [wms].OP_WMS_OCCUPANCY_LEVEL 
			SET OCCUPANCY_LEVEL = @pOCCUPANCY_LEVEL,
				[LAST_UPDATED] = CURRENT_TIMESTAMP,
				[LAST_UPDATED_BY] = @pLOGIN_ID
			WHERE  INPUT_DATE = @pINPUT_DATE AND LOCATION_SPOT= UPPER(@pSOURCE_LOCATION)
				
		
	END
						
	SELECT	@pResult	= 'OK'								
	RETURN 0
		
	END TRY
	
	BEGIN CATCH
		SELECT	@pResult	= ERROR_MESSAGE()
		RETURN -99
	END CATCH
   
END