-- =============================================
-- Autor:	        hector.gonzalez
-- Fecha de Creacion: 	2017-03-24 @ Team ERGON - Sprint ERGON Hyper
-- Description:	        sp que realiza la misma consulta que OP_WMS_VIEW_INVENTORY_SUMMARY y filtra las bodegas del login

-- Autor:	        hector.gonzalez
-- Fecha de Creacion: 	2017-03-24 @ Team ERGON - Sprint EPONA
-- Description:	        Se quito el LEFT OUTER JOIN  y se agrego join a [OP_WMS_FUNC_GET_INVENTORY_RESERVED]


-- Autor:	              hector.gonzalez
-- Fecha de Creacion: 	2017-05-22 @ Team ERGON - Sprint Sheik
-- Description:	        Se agrego HANDLE_SERIAL 

/*
-- Ejemplo de Ejecucion:
			EXEC  [wms].[OP_WMS_SP_GET_CONSOLIDATE_INVENTORY] @LOGIN = 'ADMIN' 
*/
-- =============================================
CREATE PROCEDURE [wms].[OP_WMS_SP_GET_CONSOLIDATE_INVENTORY] (@LOGIN VARCHAR(25))
AS
BEGIN
  SET NOCOUNT ON;
  --
  CREATE TABLE #WAREHOUSES (
    WAREHOUSE_ID VARCHAR(25)
   ,NAME VARCHAR(50)
   ,COMMENTS VARCHAR(150)
   ,ERP_WAREHOUSE VARCHAR(50)
   ,ALLOW_PICKING NUMERIC
   ,DEFAULT_RECEPTION_LOCATION VARCHAR(25)
   ,SHUNT_NAME VARCHAR(25)
   ,WAREHOUSE_WEATHER VARCHAR(50)
   ,WAREHOUSE_STATUS INT
   ,IS_3PL_WAREHUESE INT
   ,WAHREHOUSE_ADDRESS VARCHAR(250)
   ,GPS_URL VARCHAR(100)
   ,WAREHOUSE_BY_USER_ID INT
  )

  INSERT INTO #WAREHOUSES
  EXEC [wms].[OP_WMS_SP_GET_WAREHOUSE_ASSOCIATED_WITH_USER] @LOGIN_ID = @LOGIN

  SELECT
    ISNULL
    ((SELECT
        CLIENT_OWNER + '-' + ISNULL
        ((SELECT
            CLIENT_NAME COLLATE database_default
          FROM [wms].OP_WMS_VIEW_CLIENTS
          WHERE (CLIENT_CODE = Z.CLIENT_OWNER COLLATE database_default))
        , 'N/A') AS Expr1
      FROM [wms].OP_WMS_LICENSES AS Z
      WHERE (LICENSE_ID = MAX(A.LICENSE_ID)))
    , 'N/A') AS CLIENT_OWNER
   ,ISNULL((SELECT
        Z.CLIENT_OWNER AS Expr1
      FROM [wms].OP_WMS_LICENSES AS Z
      WHERE Z.LICENSE_ID = MAX(A.LICENSE_ID))
    , 'N-A') AS CLIENT_CODE
   ,MAX(ISNULL(B.MATERIAL_CLASS, 'SC')) AS MATERIAL_CLASS
   ,A.MATERIAL_ID
   ,B.BARCODE_ID
   ,A.MATERIAL_NAME
   ,SUM(A.QTY) AS QTY
   ,B.VOLUME_FACTOR
   ,SUM(A.QTY) * MAX(ISNULL(B.VOLUME_FACTOR, 0))
    AS TOTAL_VOLUME_FACTOR
   ,SUM(A.QTY) - ISNULL(MAX([IR].[QTY_RESERVED]), 0) AS AVAILABLE
   ,ISNULL(MAX([IR].[QTY_RESERVED]), 0) AS RESERVED
   ,ISNULL((SELECT TOP 1
        P.WAREHOUSE_REGIMEN AS Expr1
      FROM [wms].OP_WMS_LICENSES AS Z
      INNER JOIN [wms].OP_WMS_POLIZA_HEADER P
        ON Z.CODIGO_POLIZA = P.CODIGO_POLIZA
      WHERE Z.LICENSE_ID = MAX(A.LICENSE_ID))
    , 'N-A') AS REGIMEN
   ,CASE MAX([A].HANDLE_SERIAL)
      WHEN 1 THEN 'Si'
      WHEN 0 THEN 'No'
    END AS HANDLE_SERIAL
  FROM [wms].OP_WMS_INV_X_LICENSE AS A
  INNER JOIN [wms].OP_WMS_MATERIALS AS B
    ON A.MATERIAL_ID = B.MATERIAL_ID
  INNER JOIN [wms].[OP_WMS_LICENSES] [L]
    ON [A].[LICENSE_ID] = [L].[LICENSE_ID]
  INNER JOIN #WAREHOUSES [W]
    ON W.WAREHOUSE_ID COLLATE DATABASE_DEFAULT = L.[CURRENT_WAREHOUSE]
  LEFT JOIN [wms].[OP_WMS_FUNC_GET_INVENTORY_RESERVED]() [IR]
    ON ([A].[MATERIAL_ID] = [IR].[CODE_MATERIAL]
    AND [L].[CURRENT_WAREHOUSE] = [IR].[CODE_WAREHOUSE])
  GROUP BY A.MATERIAL_ID
          ,B.BARCODE_ID
          ,A.MATERIAL_NAME
          ,B.VOLUME_FACTOR
  HAVING (SUM(A.QTY) > 0)


END