-- =============================================
-- Autor:				marvin.solares
-- Fecha de Creacion: 	20181106 GForce@Perezoso
-- Description:			obtiene las series que se deben enviar para un documento de recepcion por devolucion de reserva erp

/*
-- Ejemplo de Ejecucion:
         EXEC [wms].[OP_WMS_SP_GET_RETURN_FOR_RESERVE_DETAILS_SERIES_BY_SAP_R3] @RECEPTION_HEADER = 104
*/
CREATE PROCEDURE [wms].[OP_WMS_SP_GET_RETURN_FOR_RESERVE_DETAILS_SERIES_BY_SAP_R3] (
		@RECEPTION_HEADER INT
	)
AS
BEGIN
	--
	SET NOCOUNT ON;
	--
	DECLARE
		@WAREHOUSE_CODE_PARAMETER VARCHAR(15) = NULL
		,@DOC_ID VARCHAR(50) = '-1'
		,@DATE_CONFIRMED DATETIME
		,@COD_SUPPLIER VARCHAR(50)
		,@NAME_SUPPLIER VARCHAR(100)
		,@OWNER VARCHAR(50);
	--
	CREATE TABLE [#SERIE] ([SERIES] INT);
	--
	SELECT TOP 1
		@DOC_ID = [RDH].[DOC_ID]
		,@OWNER = [RDH].[OWNER]
		,@DATE_CONFIRMED = [RDH].[DATE_CONFIRMED]
		,@COD_SUPPLIER = [RDH].[CODE_SUPPLIER]
		,@NAME_SUPPLIER = [RDH].[NAME_SUPPLIER]
	FROM
		[wms].[OP_WMS_ERP_RECEPTION_DOCUMENT_HEADER] [RDH]
	WHERE
		[RDH].[ERP_RECEPTION_DOCUMENT_HEADER_ID] = @RECEPTION_HEADER;


	CREATE TABLE [#RECEPTION_SERIES] (
		[MENGE] DECIMAL(19, 6)
		,[EBELP] INT
		,[SERIAL_NUMBER_REQUESTS] DECIMAL(18, 0)
		,[SERIE] VARCHAR(100)
		,[DOC_ID_POLIZA] DECIMAL(18, 0)
		,[MATERIAL_ID] VARCHAR(50)
		,[ROW_NUMBER] INT
	);
    
	-- ------------------------------------------------------------------------------------
	-- Obtiene la bodega por defecto para recepciones
	-- ------------------------------------------------------------------------------------
	SELECT
		@WAREHOUSE_CODE_PARAMETER = [C].[TEXT_VALUE]
	FROM
		[wms].[OP_WMS_CONFIGURATIONS] AS [C]
	WHERE
		[C].[PARAM_NAME] = 'ERP_WAREHOUSE_PURCHASE_ORDER';

	INSERT	INTO [#RECEPTION_SERIES]
			(
				[MENGE]
				,[EBELP]
				,[SERIAL_NUMBER_REQUESTS]
				,[SERIE]
				,[DOC_ID_POLIZA]
				,[MATERIAL_ID]
				,[ROW_NUMBER]
			)
	SELECT
		CASE	WHEN [MS].[CORRELATIVE] IS NULL
				THEN [D].[QTY_CONFIRMED]
				ELSE 1
		END [MENGE]
		,[D].[LINE_NUM] [EBELP]
		,CASE	WHEN [MS].[CORRELATIVE] IS NULL
				THEN [M].[SERIAL_NUMBER_REQUESTS]
				ELSE 0
			END [SERIAL_NUMBER_REQUESTS]
		,CASE	WHEN [MS].[CORRELATIVE] IS NULL THEN ''
				WHEN [MS].[SERIAL_CORRELATIVE] IS NULL
				THEN [MS].[SERIAL]
				ELSE ISNULL([MS].[SERIAL_PREFIX], '')
						+ CAST([MS].[SERIAL_CORRELATIVE] AS VARCHAR(50))
			END [SERIE]
		,[H].[DOC_ID_POLIZA]
		,[M].[MATERIAL_ID]
		,DENSE_RANK() OVER (ORDER BY [D].[LINE_NUM]) AS [ROW_NUMBER]
	FROM
		[wms].[OP_WMS_ERP_RECEPTION_DOCUMENT_DETAIL] [D]
	INNER JOIN [wms].[OP_WMS_ERP_RECEPTION_DOCUMENT_HEADER] [H] ON [H].[ERP_RECEPTION_DOCUMENT_HEADER_ID] = [D].[ERP_RECEPTION_DOCUMENT_HEADER_ID]
	INNER JOIN [wms].[OP_WMS_TASK_LIST] [T] ON [T].[SERIAL_NUMBER] = [H].[TASK_ID]
	INNER JOIN [wms].[OP_WMS_MATERIALS] [M] ON [M].[MATERIAL_ID] = [D].[MATERIAL_ID]
	INNER JOIN [SWIFT_R3_INTER].[dbo].[RFC_RESERVED] [P] ON [P].[RSNUM] = [H].[DOC_ID]
											AND [P].[RSPOS] = [D].[LINE_NUM]
	LEFT JOIN [wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER] [MS] ON [MS].[RECEPTION_HEADER_ID] = [H].[ERP_RECEPTION_DOCUMENT_HEADER_ID]
											AND [MS].[MATERIAL_ID] = [D].[MATERIAL_ID]
											AND [D].[LINE_NUM] = [MS].[RECEPTION_LINE_NUM]
											AND [MS].[STATUS] > 0
	WHERE
		[D].[ERP_RECEPTION_DOCUMENT_HEADER_ID] = @RECEPTION_HEADER
		AND [D].[IS_CONFIRMED] = 1
		AND [D].[QTY_CONFIRMED] > 0
	ORDER BY
		[D].[LINE_NUM] ASC;
		
	DECLARE
		@LINE_NUM INT
		,@QTY NUMERIC(18, 4)
		,@SERIAL_NUMBER_ID NUMERIC
		,@DOC_ID_POLIZA INT
		,@MATERIAL_ID VARCHAR(50); 



	WHILE EXISTS ( SELECT TOP 1
						1
					FROM
						[#RECEPTION_SERIES]
					WHERE
						[SERIAL_NUMBER_REQUESTS] = 1
						AND [SERIE] = '' )
	BEGIN
						
		SELECT TOP 1
			@LINE_NUM = [EBELP]
			,@QTY = [MENGE]
			,@DOC_ID_POLIZA = [DOC_ID_POLIZA]
			,@MATERIAL_ID = [MATERIAL_ID]
		FROM
			[#RECEPTION_SERIES]
		WHERE
			[SERIAL_NUMBER_REQUESTS] = 1
			AND [SERIE] = ''; 
			 
		PRINT @MATERIAL_ID + ' LINEA:'
			+ CAST(@LINE_NUM AS VARCHAR) + ' '
			+ CAST (@QTY AS VARCHAR);
		WHILE (@QTY > 0)
		BEGIN
			SELECT TOP 1
				@SERIAL_NUMBER_ID = [CORRELATIVE]
			FROM
				[wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER] [MS]
			INNER JOIN [wms].[OP_WMS_LICENSES] [L] ON [L].[CODIGO_POLIZA] = CAST(@DOC_ID_POLIZA AS VARCHAR(25))
											AND [L].[LICENSE_ID] = [MS].[LICENSE_ID]
			WHERE
				[MS].[STATUS] = 1
				AND [MS].[RECEPTION_HEADER_ID] IS NULL
				AND [MS].[MATERIAL_ID] = @MATERIAL_ID;
															
				 
			UPDATE
				[wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER]
			SET	
				[RECEPTION_HEADER_ID] = @RECEPTION_HEADER
				,[RECEPTION_LINE_NUM] = @LINE_NUM
			WHERE
				@SERIAL_NUMBER_ID = [CORRELATIVE]; 

			INSERT	INTO [#RECEPTION_SERIES]
					(
						[MENGE]
						,[EBELP]
						,[SERIAL_NUMBER_REQUESTS]
						,[SERIE]
						,[DOC_ID_POLIZA]
						,[MATERIAL_ID]
						,[ROW_NUMBER]
					)
			SELECT TOP 1
				1 [MENGE]
				,[EBELP]
				,0 [SERIAL_NUMBER_REQUESTS]
				,CASE	WHEN [MS].[SERIAL_CORRELATIVE] IS NULL
						THEN [MS].[SERIAL]
						ELSE ISNULL([MS].[SERIAL_PREFIX], '')
								+ CAST([MS].[SERIAL_CORRELATIVE] AS VARCHAR(50))
					END [SERIE]
				,[DOC_ID_POLIZA]
				,[R].[MATERIAL_ID]
				,[R].[ROW_NUMBER]
			FROM
				[#RECEPTION_SERIES] [R]
			INNER JOIN [wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER] [MS] ON [MS].[CORRELATIVE] = @SERIAL_NUMBER_ID
			WHERE
				[EBELP] = @LINE_NUM;


			SELECT
				@QTY = @QTY - 1;
		END; 
		DELETE
			[#RECEPTION_SERIES]
		WHERE
			[EBELP] = @LINE_NUM
			AND [SERIAL_NUMBER_REQUESTS] = 1;
	END; 

	SELECT
		[ROW_NUMBER] [EBELP]
		,[SERIE]
	FROM
		[#RECEPTION_SERIES]
	WHERE
		ISNULL([SERIE], '') <> '';

END;