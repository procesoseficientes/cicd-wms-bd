-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [wms].OP_WMS_SP_AUDIT_RECEPTION_COUNT 
	@pAUDIT_ID			NUMERIC(18,0),
	@pMETHOD			VARCHAR(25),
	@pCODIGO_POLIZA		VARCHAR(50),
	@pBARCODE_ID		VARCHAR(50),
	@pQTY_INPUTED		NUMERIC(18,4),
	@pSERIAL_ID			VARCHAR(50),
	@pLOGIN_ID			VARCHAR(25),
	
	@pResult			varchar(250) OUTPUT
AS
	DECLARE @pSCANNED numeric(18,0);
	DECLARE @pINPUTED numeric(18,4);
	DECLARE @pMATERIAL_ID varchar(50);
	DECLARE @pCLIENT_ID varchar(25);
	
BEGIN
	BEGIN TRY
	BEGIN
		
		SELECT @pCLIENT_ID = (SELECT TOP 1 CLIENT_CODE FROM OP_WMS_POLIZA_HEADER 
								WHERE NUMERO_ORDEN = (SELECT NUMERO_ORDEN 
														FROM [wms].OP_WMS_AUDIT_RECEPTION_CONTROL
														WHERE AUDIT_ID = @pAUDIT_ID)
								AND CODIGO_POLIZA = (SELECT CODIGO_POLIZA FROM [wms].OP_WMS_AUDIT_RECEPTION_CONTROL
														WHERE AUDIT_ID = @pAUDIT_ID))
		
		SELECT @pMATERIAL_ID = ISNULL((SELECT MATERIAL_ID FROM [wms].OP_WMS_MATERIALS 
							WHERE (BARCODE_ID = @pBARCODE_ID OR ALTERNATE_BARCODE = @pBARCODE_ID) AND CLIENT_OWNER = @pCLIENT_ID),'N/F')

		IF(@pMATERIAL_ID = 'N/F') BEGIN
			SELECT	@pResult	= 'SKU ' + @pBARCODE_ID +' NO EXISTE'
			RETURN -1
		END
		
		IF(@pBARCODE_ID = @pSERIAL_ID) BEGIN
			SELECT	@pResult	= 'NUMERO DE SERIE ' + @pSERIAL_ID +' ES INVALIDO'
			RETURN -1
		END

		IF(@pMETHOD = 'INPUT') BEGIN
			SELECT @pINPUTED = @pQTY_INPUTED
			SELECT @pSCANNED = 0
		END
		ELSE BEGIN
			SELECT @pINPUTED = 0
			SELECT @pSCANNED = 1
		END
		
		IF EXISTS(SELECT 1 FROM [wms].OP_WMS_AUDIT_RECEPTION_SERIES
					WHERE AUDIT_ID = @pAUDIT_ID AND SERIAL_NUMBER = @pSERIAL_ID)
		BEGIN
			SELECT	@pResult	= 'NUMERO DE SERIE ' + @pSERIAL_ID +' YA FUE ESCANEADO'
			RETURN -1
		END
		
		INSERT INTO [wms].[OP_WMS_AUDIT_RECEPTION_SKUS]
			   ([AUDIT_ID]
			   ,[CODIGO_POLIZA]
			   ,[MATERIAL_ID]
			   ,[BARCODE_ID]
			   ,[MATERIAL_NAME]
			   ,[SCANNED_COUNT]
			   ,[INPUTED_COUNT]
			   ,[LAST_UPDATED]
			   ,[LAST_UPDATED_BY])
		 VALUES
			   (@pAUDIT_ID
			   ,@pCODIGO_POLIZA
			   ,@pMATERIAL_ID
			   ,@pBARCODE_ID
			   ,(SELECT MATERIAL_NAME FROM [wms].OP_WMS_MATERIALS WHERE MATERIAL_ID = @pMATERIAL_ID)
			   ,@pSCANNED
			   ,@pINPUTED
			   ,CURRENT_TIMESTAMP
			   ,@pLOGIN_ID)
			   
		IF(@pMETHOD = 'SCANNING') BEGIN
			BEGIN TRY
				BEGIN
					INSERT INTO [wms].[OP_WMS_AUDIT_RECEPTION_SERIES]
						   ([AUDIT_ID]
						   ,[SERIAL_NUMBER]
						   ,[MATERIAL_ID]
						   ,[LAST_UPDATED])
					 VALUES
						   (@pAUDIT_ID
						   ,@pSERIAL_ID
						   ,@pMATERIAL_ID
						   ,CURRENT_TIMESTAMP)
					
					IF @@ERROR = 0 BEGIN
						SELECT	@pResult	= 'OK'
					END 
					ELSE BEGIN
						SELECT	@pResult	= ERROR_MESSAGE()
					END
					
				END
			END TRY
			BEGIN CATCH
				SELECT	@pResult	= 'AUDIT: ' + CONVERT(VARCHAR(15), @pAUDIT_ID) + ' N/S: ' + @pSERIAL_ID + ' '+ ERROR_MESSAGE() + ' MATERIAL_ID: ' +@pMATERIAL_ID
			END CATCH
		END
		
		IF @@ERROR = 0 BEGIN
			SELECT	@pResult	= 'OK'
		END 
		ELSE BEGIN
			SELECT	@pResult	= ERROR_MESSAGE()
		END
	END	
	END TRY
	BEGIN CATCH
		
		IF(@pMETHOD = 'INPUT') BEGIN
			UPDATE [wms].[OP_WMS_AUDIT_RECEPTION_SKUS]
			SET	  [INPUTED_COUNT] = @pQTY_INPUTED
				  ,[LAST_UPDATED] = CURRENT_TIMESTAMP
				  ,[LAST_UPDATED_BY] = @pLOGIN_ID
			WHERE 
				[AUDIT_ID]		= @pAUDIT_ID		AND
				[CODIGO_POLIZA] = @pCODIGO_POLIZA	AND
				[MATERIAL_ID]	= @pMATERIAL_ID
			
			IF @@ERROR = 0 BEGIN
				SELECT	@pResult	= 'OK'
			END 
			ELSE BEGIN
				SELECT	@pResult	= ERROR_MESSAGE()
			END
			
		END
		ELSE BEGIN
			BEGIN TRY
				BEGIN
						
					/*		
					SELECT @pMATERIAL_ID = ISNULL((SELECT MATERIAL_ID FROM wms.OP_WMS_MATERIALS 
							WHERE (BARCODE_ID = @pBARCODE_ID OR ALTERNATE_BARCODE = @pBARCODE_ID) AND CLIENT_OWNER = @pCLIENT_ID),'N/F')

					IF(@pMATERIAL_ID = 'N/F') BEGIN
						SELECT	@pResult	= 'SKU ' + @pBARCODE_ID +' NO EXISTE (CLIENT:'+@pCLIENT_ID+')'
						RETURN -1
					END
					*/
					
					/*
					SELECT	@pResult	= 'SKU ' + @pBARCODE_ID +' NO EXISTE (CLIENT:'+@pCLIENT_ID+')'
					RETURN -1
					*/
					
					SELECT @pMATERIAL_ID = ISNULL((SELECT TOP 1 MATERIAL_ID FROM [wms].OP_WMS_MATERIALS 
						WHERE (BARCODE_ID = @pBARCODE_ID OR ALTERNATE_BARCODE = @pBARCODE_ID)  AND CLIENT_OWNER = @pCLIENT_ID),'N/F')

					IF(@pMATERIAL_ID = 'N/F') BEGIN
						SELECT	@pResult	= 'SKU ' + @pBARCODE_ID +' NO EXISTE (CLIENT:'+@pCLIENT_ID+')'
						RETURN -1
					END	

					INSERT INTO [wms].[OP_WMS_AUDIT_RECEPTION_SERIES]
						   ([AUDIT_ID]
						   ,[SERIAL_NUMBER]
						   ,[MATERIAL_ID]
						   ,[LAST_UPDATED])
					 VALUES
						   (@pAUDIT_ID
						   ,@pSERIAL_ID
						   ,@pMATERIAL_ID
						   ,CURRENT_TIMESTAMP)
						   
					UPDATE [wms].[OP_WMS_AUDIT_RECEPTION_SKUS]
					SET	   [SCANNED_COUNT] = [SCANNED_COUNT]+1
						  ,[LAST_UPDATED] = CURRENT_TIMESTAMP
						  ,[LAST_UPDATED_BY] = @pLOGIN_ID
					WHERE 
						[AUDIT_ID]		= @pAUDIT_ID		AND
						[CODIGO_POLIZA] = @pCODIGO_POLIZA	AND
						[MATERIAL_ID]	= @pMATERIAL_ID

						IF @@ERROR = 0 BEGIN
							SELECT	@pResult	= 'OK'
						END 
						ELSE BEGIN
							SELECT	@pResult	= ERROR_MESSAGE()
						END

				END
			END TRY
			BEGIN CATCH
				SELECT	@pResult	= '(INPUT) N/S: ' + @pSERIAL_ID + ' YA FUE ESCANEADO. '+ERROR_MESSAGE()+ ' MATERIAL_ID: ' --+ @pMATERIAL_ID
			END CATCH
		
		END
		
	END CATCH

END