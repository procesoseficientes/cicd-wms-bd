-- =============================================
-- Autor:				pablo.aguilar
-- Fecha de Creacion: 	28-Oct-16 @ A-TEAM Sprint 4 
-- Description:			SP que obtienen todos los servicios a cobrar de picking 

-- Modificación: pablo.aguilar
-- Fecha de Creacion: 	2017-03-27 Team ERGON - Sprint ERGON HYPER
-- Description:	Se agrega como resultado de la consulta el codigo del acuerdo comercial utilizado para el cobro  

/*
-- Ejemplo de Ejecucion:
	 EXEC [wms].[OP_WMS_GET_SERVICE_TO_BILL_PICKING]  @INICIAL_DATE = '2016-11-02 00:00:00.000'
  , @END_DATE = '2016-11-02 23:59:59.997', @LAST_UPDATED_BY = 'PAGUILAR'

SELECT * FROM [wms].[OP_WMS_TARIFICADOR_HEADER] [OWTH]  
*/
-- =============================================
CREATE PROCEDURE [wms].[OP_WMS_GET_SERVICE_TO_BILL_PICKING] (@INICIAL_DATE DATETIME
, @END_DATE DATETIME
, @LAST_UPDATED_BY VARCHAR(25))
AS
BEGIN
  SET NOCOUNT ON;


  SELECT
    [C].[CLIENT_CODE]
   ,[C].[CLIENT_NAME]
   ,[AC].[ACUERDO_COMERCIAL]
   ,[T].[TYPE_CHARGE_ID]
   ,[TC].[DESCRIPTION] [TYPE_CHARGE_DESCRIPTION]
   ,[S].[SERVICE_ID]
   ,[TC].[SERVICE_CODE]
   ,[S].[SERVICE_DESCRIPTION]
   ,[T].[UNIT_PRICE]
   ,[H].[REGIMEN] INTO #CLIENT_TO_BILL
  FROM [wms].[OP_WMS_TARIFICADOR_DETAIL] [T]
  INNER JOIN [wms].[OP_WMS_TARIFICADOR_HEADER] [H]
    ON [T].[ACUERDO_COMERCIAL] = [H].[ACUERDO_COMERCIAL_ID]
  INNER JOIN [wms].[OP_WMS_TYPE_CHARGE] [TC]
    ON [TC].[TYPE_CHARGE_ID] = [T].[TYPE_CHARGE_ID]
  INNER JOIN [wms].[OP_WMS_ACUERDOS_X_CLIENTE] [AC]
    ON [T].[ACUERDO_COMERCIAL] = [AC].[ACUERDO_COMERCIAL]
  INNER JOIN [wms].[OP_WMS_VIEW_CLIENTS] [C]
    ON [C].[CLIENT_CODE] = [AC].[CLIENT_ID]
  INNER JOIN [wms].[OP_WMS_SERVICE] [S]
    ON [S].[SERVICE_CODE] = [TC].[SERVICE_CODE]
  WHERE [TC].[SERVICE_CODE] = 'PICKING'
----  AND @INICIAL_DATE >= [H].[VALID_FROM]
----  AND @END_DATE <= [H].[VALID_TO]


  SELECT
    CAST(1 AS NUMERIC(18, 2)) [QTY]
   ,[C].[SERVICE_CODE] [TRANSACTION_TYPE]
   ,[C].[UNIT_PRICE] [PRICE]
   ,[C].[UNIT_PRICE] * CAST(1 AS NUMERIC(18, 2)) [TOTAL_AMOUNT]
   ,CAST(NULL AS DATETIME) [PROCESS_DATE]
   ,GETDATE() [CREATED_DATE]
   ,GETDATE() [LAST_UPDATED_DATE]
   ,@LAST_UPDATED_BY [LAST_UPDATED_BY]
   ,[C].[TYPE_CHARGE_ID] [TYPE_CHARGE_ID]
   ,[C].[TYPE_CHARGE_DESCRIPTION] [TYPE_CHARGE_DESCRIPTION]
   ,[C].[CLIENT_CODE]
   ,[C].[CLIENT_NAME]
   ,CAST(0 AS INT) [IS_CHARGED]
   ,CAST(NULL AS VARCHAR(30)) [INVOICE_REFERENCE]
   ,CAST(NULL AS DATETIME) [CHARGED_DATE]
   ,CAST(NULL AS NUMERIC(9, 0)) [LICENSE_ID]
   ,CAST(NULL AS VARCHAR(25)) [LOCATION]
   ,[C].[SERVICE_ID]
   ,[C].[SERVICE_CODE]
   ,[C].[SERVICE_DESCRIPTION]
   ,[PH].[WAREHOUSE_REGIMEN] [REGIMEN]
   ,[PH].[DOC_ID] [DOC_NUM]
   ,[TL].[WAVE_PICKING_ID] [TRANSACTION_ID]
   ,[C].[ACUERDO_COMERCIAL]
  FROM [wms].[OP_WMS_TASK_LIST] [TL]
  INNER JOIN [#CLIENT_TO_BILL] [C]
    ON (
    TL.CLIENT_OWNER = C.CLIENT_CODE
    )
  INNER JOIN [wms].[OP_WMS_POLIZA_HEADER] [PH]
    ON (
    [TL].CODIGO_POLIZA_TARGET = [PH].[CODIGO_POLIZA]
    AND [TL].[REGIMEN] = [PH].[WAREHOUSE_REGIMEN]
    )
  WHERE TL.TASK_TYPE = 'TAREA_PICKING'
  AND [C].[REGIMEN] = [PH].[WAREHOUSE_REGIMEN]
  AND (TL.COMPLETED_DATE IS NOT NULL
  OR TL.CANCELED_DATETIME IS NOT NULL)
  AND (TL.COMPLETED_DATE IS NULL
  OR (
  TL.QUANTITY_PENDING <> TL.QUANTITY_ASSIGNED
  AND TL.COMPLETED_DATE BETWEEN @INICIAL_DATE AND @END_DATE
  ))
  AND (TL.CANCELED_DATETIME IS NULL
  OR (
  TL.QUANTITY_PENDING <> TL.QUANTITY_ASSIGNED
  AND TL.CANCELED_DATETIME BETWEEN @INICIAL_DATE AND @END_DATE
  ))
  GROUP BY [TL].[WAVE_PICKING_ID]
          ,[PH].[DOC_ID]
          ,[C].[SERVICE_CODE]
          ,[C].[UNIT_PRICE]
          ,[C].[TYPE_CHARGE_ID]
          ,[C].[TYPE_CHARGE_DESCRIPTION]
          ,[C].[CLIENT_CODE]
          ,[C].[CLIENT_NAME]
          ,[C].[SERVICE_ID]
          ,[C].[SERVICE_CODE]
          ,[C].[SERVICE_DESCRIPTION]
          ,[PH].[WAREHOUSE_REGIMEN]
          ,[C].[ACUERDO_COMERCIAL]

END