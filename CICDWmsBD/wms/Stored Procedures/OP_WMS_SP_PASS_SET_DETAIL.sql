


CREATE PROCEDURE [wms].[OP_WMS_SP_PASS_SET_DETAIL]
	@PASS_ID NUMERIC(18,0),
	@AUDIT_ID NUMERIC(18,0),
	@LAST_UPDATED_BY VARCHAR(25),
	@PRESULT VARCHAR(4000) OUTPUT
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			IF NOT EXISTS 
				(SELECT 1 FROM [wms].OP_WMS3PL_AUDITS_X_PASS 
					WHERE PASS_ID = @PASS_ID AND AUDIT_ID = @AUDIT_ID)
				BEGIN
					INSERT INTO [wms].OP_WMS3PL_AUDITS_X_PASS 
					   (PASS_ID, AUDIT_ID, LAST_UPDATED_BY, LAST_UPDATED)
					VALUES
					   (@PASS_ID, @AUDIT_ID, @LAST_UPDATED_BY, GETDATE());
				END
			ELSE
				BEGIN
					DELETE FROM [wms].OP_WMS3PL_AUDITS_X_PASS 
					WHERE PASS_ID = @PASS_ID AND AUDIT_ID = @AUDIT_ID
					
					INSERT INTO [wms].OP_WMS3PL_AUDITS_X_PASS 
					   (PASS_ID, AUDIT_ID, LAST_UPDATED_BY, LAST_UPDATED)
					VALUES
					   (@PASS_ID, @AUDIT_ID, @LAST_UPDATED_BY, GETDATE());
				END
				
			UPDATE [wms].OP_WMS_AUDIT_DISPATCH_CONTROL SET
			PASS_DATE = GETDATE()
			, PASS = 1
			WHERE AUDIT_ID = @AUDIT_ID
			
				
		COMMIT TRAN
		
		SELECT @PRESULT = 'OK';
	END TRY
	
	BEGIN CATCH
		ROLLBACK TRAN;
		SELECT @PRESULT = ERROR_MESSAGE()
	END CATCH
END