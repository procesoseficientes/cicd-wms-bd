-- =============================================
-- Autor:                 marvin.solares
-- Fecha de Creacion:   20180821 GForce@Humano
-- Description:          SP que obtiene el detalle series de las recepciones erp.
/*
-- Ejemplo de Ejecucion:
		EXEC [wms].[OP_WMS_SP_GET_RECEPTION_ERP_DOCUMENT_SERIES] @SERIAL_NUMBER = 237
		
*/
-- =============================================
CREATE PROCEDURE [wms].[OP_WMS_SP_GET_RECEPTION_ERP_DOCUMENT_SERIES] (@SERIAL_NUMBER INT)
AS
BEGIN

	DECLARE
		@COD_SUPPLIER VARCHAR(200)
		,@NAME_SUPPLIER VARCHAR(200);
	
	SELECT TOP 1
		@COD_SUPPLIER = [CODE_SUPPLIER]
		,@NAME_SUPPLIER = [NAME_SUPPLIER]
	FROM
		[wms].[OP_WMS_ERP_RECEPTION_DOCUMENT_HEADER]
	WHERE
		[TASK_ID] = @SERIAL_NUMBER
	GROUP BY
		[CODE_SUPPLIER]
		,[NAME_SUPPLIER];


	-- ------------------------------------------------------------------------------------
	-- si la recepcion ya fue autorizada retornamos el resultado para que el algoritmo no recalcule la serie correlativa
	-- ------------------------------------------------------------------------------------
	IF EXISTS ( SELECT
					*
				FROM
					[wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER] [MSN]
				INNER JOIN [wms].[OP_WMS_ERP_RECEPTION_DOCUMENT_HEADER] [H] ON [H].[ERP_RECEPTION_DOCUMENT_HEADER_ID] = [MSN].[RECEPTION_HEADER_ID]
				WHERE
					[H].[TASK_ID] = @SERIAL_NUMBER )
	BEGIN
		SELECT
			[MSN].[CORRELATIVE] [ID]
			,[MSN].[MATERIAL_ID] [MATERIAL_ID]
			,[MSN].[SERIAL]
			,ISNULL([MSN].[SERIAL_PREFIX], '') [SERIAL_PREFIX]
			,CASE	WHEN [M].[HANDLE_CORRELATIVE_SERIALS] = 1
					THEN CONCAT(ISNULL([MSN].[SERIAL_PREFIX],
										''),
								ISNULL([MSN].[SERIAL_CORRELATIVE],
										0))
					ELSE ''
				END [CORRELATIVE]
			,[MSN].[SERIAL_CORRELATIVE]
			,[MSN].[SERIAL_CORRELATIVE_ID]
			,@SERIAL_NUMBER [DOC_ID]
			,ISNULL([M].[PREFIX_CORRELATIVE_SERIALS], '') [MATERIAL_PREFIX]
			,ROW_NUMBER() OVER (ORDER BY [MSN].[MATERIAL_ID] ASC, [MSN].[SERIAL] ASC) AS [ROWNUMBER]
			,[L].[LICENSE_ID]
			,[L].[CURRENT_LOCATION]
			,[M].[MATERIAL_NAME]
			,@COD_SUPPLIER [CODE_SUPPLIER]
			,@NAME_SUPPLIER [NAME_SUPPLIER]
		FROM
			[wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER] [MSN]
		INNER JOIN [wms].[OP_WMS_ERP_RECEPTION_DOCUMENT_HEADER] [H] ON [H].[ERP_RECEPTION_DOCUMENT_HEADER_ID] = [MSN].[RECEPTION_HEADER_ID]
		LEFT JOIN [wms].[OP_WMS_LICENSES] [L] ON [L].[LICENSE_ID] = [MSN].[LICENSE_ID]
		INNER JOIN [wms].[OP_WMS_MATERIALS] [M] ON [M].[MATERIAL_ID] = [MSN].[MATERIAL_ID]
		WHERE
			[H].[TASK_ID] = @SERIAL_NUMBER;
			--AND [M].[HANDLE_CORRELATIVE_SERIALS] = 1;

		RETURN;
	END;

	DECLARE	@DOCUMENT_TYPE VARCHAR(100);

	SELECT TOP 1
		@DOCUMENT_TYPE = [h].[TYPE]
	FROM
		[wms].[OP_WMS_ERP_RECEPTION_DOCUMENT_HEADER] [h]
	WHERE
		[h].[TASK_ID] = @SERIAL_NUMBER;
	-- ------------------------------------------------------------------------------------
	-- Obtengo la configuracion del rango de la serie correlativa
	-- ------------------------------------------------------------------------------------
	SELECT
		[TEXT_VALUE]
		,[RANGE_NUM_START]
		,[RANGE_NUM_END]
		,[CL].[CLASS_ID]
		,[CL].[CLASS_NAME]
		,CAST(ISNULL(MAX([MS].[SERIAL_CORRELATIVE]),
						[C].[RANGE_NUM_START] - 1) AS NUMERIC) [ACTUAL_CORRELATIVE]
	INTO
		[#CORRELATIVES]
	FROM
		[wms].[OP_WMS_CONFIGURATIONS] [C]
	LEFT JOIN [wms].[OP_WMS_CLASS] [CL] ON [CL].[CLASS_NAME] = [C].[SPARE1]
	LEFT JOIN [wms].[OP_WMS_MATERIALS] [M] ON [CL].[CLASS_ID] = [M].[MATERIAL_CLASS]
	LEFT JOIN [wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER] [MS] ON [MS].[MATERIAL_ID] = [M].[MATERIAL_ID]
											AND [MS].[SERIAL_CORRELATIVE_ID] = [C].[TEXT_VALUE]
	WHERE
		[PARAM_TYPE] = 'INGRESOS'
		AND [PARAM_GROUP] = 'RANGO_SERIES_CORRELATIVAS'
		AND @DOCUMENT_TYPE NOT IN ('RECEPCION_GENERAL',
									'DEVOLUCION_FACTURA')
	GROUP BY
		[C].[TEXT_VALUE]
		,[C].[RANGE_NUM_START]
		,[C].[RANGE_NUM_END]
		,[CL].[CLASS_ID]
		,[CL].[CLASS_NAME];
		-- ------------------------------------------------------------------------------------
		-- Obtengo todas las series recepcionadas para la tarea
		-- ------------------------------------------------------------------------------------

	DECLARE	@RESULT TABLE (
			[ID] INT NOT NULL
			,[MATERIAL_ID] VARCHAR(250) NULL
			,[SERIAL] VARCHAR(50) NULL
			,[SERIAL_PREFIX] VARCHAR(20) NULL
			,[CORRELATIVE] INT NULL
			,[SERIAL_CORRELATIVE] NUMERIC(18) NULL
			,[SERIAL_CORRELATIVE_ID] VARCHAR(200) NULL
			,[MATERIAL_PREFIX] VARCHAR(200) NULL
			,[ROWNUMBER] INT NULL
			,[LICENSE_ID] NUMERIC NOT NULL
			,[CURRENT_LOCATION] VARCHAR(25) NULL
			,[RANGE_NUM_START] DECIMAL NULL
			,[RANGE_NUM_END] DECIMAL NULL
			,[MATERIAL_NAME] VARCHAR(200) NOT NULL
			,[CODE_SUPPLIER] VARCHAR(200) NULL
			,[NAME_SUPPLIER] VARCHAR(200) NULL
		); 

	INSERT	INTO @RESULT
			(
				[ID]
				,[MATERIAL_ID]
				,[SERIAL]
				,[SERIAL_PREFIX]
				,[CORRELATIVE]
				,[SERIAL_CORRELATIVE]
				,[SERIAL_CORRELATIVE_ID]
				,[MATERIAL_PREFIX]
				,[ROWNUMBER]
				,[LICENSE_ID]
				,[CURRENT_LOCATION]
				,[RANGE_NUM_START]
				,[RANGE_NUM_END]
				,[MATERIAL_NAME]
				,[CODE_SUPPLIER]
				,[NAME_SUPPLIER]
			)
	SELECT
		[MSN].[CORRELATIVE] [ID]
		,[MSN].[MATERIAL_ID] [MATERIAL_ID]
		,[MSN].[SERIAL] [SERIAL]
		,[M].[PREFIX_CORRELATIVE_SERIALS] [SERIAL_PREFIX]
		,CASE	WHEN [M].[HANDLE_CORRELATIVE_SERIALS] = 1
						AND @DOCUMENT_TYPE NOT IN (
						'RECEPCION_GENERAL',
						'DEVOLUCION_FACTURA')
				THEN CONCAT(ISNULL([M].[PREFIX_CORRELATIVE_SERIALS],
									''),
							[C].[ACTUAL_CORRELATIVE]
							+ RANK() OVER (PARTITION BY [C].[CLASS_NAME] ORDER BY [MSN].[MATERIAL_ID] ASC, [MSN].[SERIAL] ASC))
				ELSE ''
			END [CORRELATIVE]
		,[C].[ACTUAL_CORRELATIVE]
		+ RANK() OVER (PARTITION BY [C].[CLASS_NAME] ORDER BY [MSN].[MATERIAL_ID] ASC, [MSN].[SERIAL] ASC) AS [SERIAL_CORRELATIVE]
		,[C].[TEXT_VALUE] [SERIAL_CORRELATIVE_ID]
		,ISNULL([M].[PREFIX_CORRELATIVE_SERIALS], '') [MATERIAL_PREFIX]
		,CASE	WHEN [M].[HANDLE_CORRELATIVE_SERIALS] = 1
						AND @DOCUMENT_TYPE NOT IN (
						'RECEPCION_GENERAL',
						'DEVOLUCION_FACTURA')
				THEN RANK() OVER (PARTITION BY [C].[CLASS_NAME] ORDER BY [MSN].[MATERIAL_ID] ASC, [MSN].[SERIAL] ASC)
				ELSE 0
			END [ROWNUMBER]
		,[L].[LICENSE_ID]
		,[L].[CURRENT_LOCATION]
		,[C].[RANGE_NUM_START]
		,[C].[RANGE_NUM_END]
		,[M].[MATERIAL_NAME]
		,CAST(@COD_SUPPLIER AS VARCHAR(200)) [CODE_SUPPLIER]
		,CAST(@NAME_SUPPLIER AS VARCHAR(200)) [NAME_SUPPLIER]
	FROM
		[wms].[OP_WMS_TRANS] [T]
	LEFT JOIN [wms].[OP_WMS_LICENSES] [L] ON [L].[CODIGO_POLIZA] = [T].[CODIGO_POLIZA]
	INNER JOIN [wms].[OP_WMS_MATERIAL_X_SERIAL_NUMBER] [MSN] ON [T].[MATERIAL_CODE] = [MSN].[MATERIAL_ID]
											AND [MSN].[LICENSE_ID] = [L].[LICENSE_ID]
											AND [MSN].[SERIAL] = [T].[SERIAL]
	INNER JOIN [wms].[OP_WMS_MATERIALS] [M] ON [M].[MATERIAL_ID] = [T].[MATERIAL_CODE]
	LEFT JOIN [#CORRELATIVES] [C] ON [C].[CLASS_ID] = [M].[MATERIAL_CLASS]
	WHERE
		[T].[TASK_ID] = @SERIAL_NUMBER
		AND [T].[TRANS_TYPE] = 'INGRESO_GENERAL'
		AND [T].[STATUS] = 'PROCESSED';
	
	IF EXISTS ( SELECT TOP 1
					1
				FROM
					@RESULT
				WHERE
					[RANGE_NUM_END] < [SERIAL_CORRELATIVE] )
	BEGIN
		RAISERROR ('Usted ha alcanzado el máximo asignado para esta serie correlativa, para continuar deberá asignar un nuevo identificador de serie', 16, 1);
		RETURN;
	END;
	
	SELECT
		[R].[ID]
		,[R].[MATERIAL_ID]
		,[R].[SERIAL]
		,[R].[SERIAL_PREFIX]
		,CAST([R].[CORRELATIVE] AS VARCHAR) [CORRELATIVE]
		,[R].[SERIAL_CORRELATIVE]
		,[R].[SERIAL_CORRELATIVE_ID]
		,[R].[MATERIAL_PREFIX]
		,[R].[ROWNUMBER]
		,[R].[LICENSE_ID]
		,[R].[CURRENT_LOCATION]
		,[R].[RANGE_NUM_START]
		,[R].[RANGE_NUM_END]
		,@SERIAL_NUMBER [DOC_ID]
		,[R].[MATERIAL_NAME]
		,[R].[CODE_SUPPLIER]
		,[R].[NAME_SUPPLIER]
	FROM
		@RESULT [R];
	

END;
