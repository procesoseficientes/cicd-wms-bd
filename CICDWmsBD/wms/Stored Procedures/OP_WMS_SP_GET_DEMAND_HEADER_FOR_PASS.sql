-- =============================================
-- Autor:	rudi.garcia
-- Fecha de Creacion: 	23-Nov-2017 @ Team Reborn - Sprint Nach
-- Description:	 Sp que obtiene las demandas de despacho disponibles.

/*
-- Ejemplo de Ejecucion:
EXEC [wms].[OP_WMS_SP_GET_DEMAND_HEADER_FOR_PASS] @INITIAL_DATE = '2017-01-11 01:02:31.062'
                                      , @END_DATE = '2017-11-30 17:02:31.062'
                                      , @CODE_WAREHOUSE = 'CEDI_ZONA_5'
                                      , @DEMAND_TYPE = 'GENERAL_DISPATCH'

			SELECT * FROM [wms].[OP_WMS_TASK]
*/
-- =============================================

CREATE PROCEDURE [wms].[OP_WMS_SP_GET_DEMAND_HEADER_FOR_PASS] (
		@INITIAL_DATE DATETIME
		,@END_DATE DATETIME
		,@CODE_WAREHOUSE VARCHAR(25)
		,@DEMAND_TYPE VARCHAR(50)
	)
AS
BEGIN
	SET NOCOUNT ON;
  --
	DECLARE	@OP_WMS_PASS_DETAIL TABLE (
			[PICKING_DEMAND_HEADER_ID] INT
			,[WAVE_PICKING_ID] INT
			,[DOC_NUM] VARCHAR(50)
			,[MATERIAL_ID] VARCHAR(50)
			,[QTY] NUMERIC(18, 4)
		);
	DECLARE	@TASK_LIST_TEMP TABLE (
			[WAVE_PICKING_ID] INT
		);

	IF (@DEMAND_TYPE = 'GENERAL_DISPATCH')
	BEGIN
		INSERT	INTO @OP_WMS_PASS_DETAIL
				(
					[PICKING_DEMAND_HEADER_ID]
					,[WAVE_PICKING_ID]
					,[DOC_NUM]
					,[MATERIAL_ID]
					,[QTY]
				)
		SELECT
			[PD].[PICKING_DEMAND_HEADER_ID]
			,[PD].[WAVE_PICKING_ID]
			,[PD].[DOC_NUM]
			,[PD].[MATERIAL_ID]
			,SUM([PD].[QTY]) [QTY]
		FROM
			[wms].[OP_WMS3PL_PASSES] [PH]
		INNER JOIN [wms].[OP_WMS_PASS_DETAIL] [PD] ON ([PH].[PASS_ID] = [PD].[PASS_HEADER_ID])
		WHERE
			[PH].[STATUS] <> 'CANCELED'
		GROUP BY
			[PD].[PICKING_DEMAND_HEADER_ID]
			,[PD].[WAVE_PICKING_ID]
			,[PD].[DOC_NUM]
			,[PD].[MATERIAL_ID];


		DECLARE	@TASK_LIST TABLE (
				[CLIENT_CODE] VARCHAR(25)
				,[CLIENT_NAME] VARCHAR(150)
				,[WAVE_PICKING_ID] INT
				,[DOC_NUM] varchar(50)
				,[CREATED_DATE] DATETIME
				,[CODE_WAREHOUSE] VARCHAR(25)
				,[MATERIAL_ID] VARCHAR(50)
				,[MATERIAL_NAME] VARCHAR(200)
				,[QTY] NUMERIC(18, 4)
			);


		INSERT	INTO @TASK_LIST_TEMP
				(
					[WAVE_PICKING_ID]
				)
		SELECT
			[TL].[WAVE_PICKING_ID]
		FROM
			[wms].[OP_WMS_TASK_LIST] [TL]
		GROUP BY
			[TL].[WAVE_PICKING_ID]
		HAVING
			MIN([TL].[IS_COMPLETED]) = 1;


		INSERT	INTO @TASK_LIST
				(
					[CLIENT_CODE]
					,[CLIENT_NAME]
					,[WAVE_PICKING_ID]
					,[DOC_NUM]
					,[CREATED_DATE]
					,[CODE_WAREHOUSE]
					,[MATERIAL_ID]
					,[MATERIAL_NAME]
					,[QTY]
				)
		SELECT DISTINCT
			[TL].[CLIENT_OWNER] AS [CLIENT_CODE]
			,[TL].[CLIENT_NAME] AS [CLIENT_NAME]
			,[TL].[WAVE_PICKING_ID]
			,MAX([PH].[DOC_ID]) AS [DOC_NUM]
			,MAX([TL].[ASSIGNED_DATE]) AS [CREATED_DATE]
			,[L].[CURRENT_WAREHOUSE] [CODE_WAREHOUSE]
			,[TL].[MATERIAL_ID]
			,[TL].[MATERIAL_NAME]
			,SUM([TL].[QUANTITY_ASSIGNED]
					- [TL].[QUANTITY_PENDING]) [QTY]
		FROM
			[wms].[OP_WMS_TASK_LIST] [TL]
		INNER JOIN @TASK_LIST_TEMP [TLP] ON ([TLP].[WAVE_PICKING_ID] = [TL].[WAVE_PICKING_ID])
		INNER JOIN [wms].[OP_WMS_LICENSES] [L] ON ([L].[LICENSE_ID] = [TL].[LICENSE_ID_SOURCE])
		INNER JOIN [wms].[OP_WMS_POLIZA_HEADER] [PH] ON ([PH].[CODIGO_POLIZA] = [TL].[CODIGO_POLIZA_TARGET])
		LEFT JOIN [wms].[OP_WMS_NEXT_PICKING_DEMAND_HEADER] [PDH] ON ([PDH].[WAVE_PICKING_ID] = [TL].[WAVE_PICKING_ID])
		WHERE
			[TL].[COMPLETED_DATE] BETWEEN @INITIAL_DATE
									AND		@END_DATE
			AND [TL].[IS_COMPLETED] = 1
			AND [TL].[IS_CANCELED] <> 1
			AND [TL].[QUANTITY_PENDING] <> [TL].[QUANTITY_ASSIGNED]
			AND [TL].[TASK_TYPE] = 'TAREA_PICKING'
			AND [L].[CURRENT_WAREHOUSE] = @CODE_WAREHOUSE
			AND [PDH].[PICKING_DEMAND_HEADER_ID] IS NULL
		GROUP BY
			[TL].[CLIENT_OWNER]
			,[TL].[CLIENT_NAME]
			,[TL].[WAVE_PICKING_ID]
			,[TL].[MATERIAL_ID]
			,[TL].[MATERIAL_NAME]
			,[L].[CURRENT_WAREHOUSE]
		HAVING
			MIN([TL].[IS_COMPLETED]) = 1;

		SELECT DISTINCT
			0 AS [PICKING_DEMAND_HEADER_ID]
			,[TL].[CLIENT_CODE]
			,[TL].[CLIENT_NAME]
			,MAX([TL].[DOC_NUM]) AS [DOC_NUM]
			,[TL].[WAVE_PICKING_ID]
			,MAX([TL].[CREATED_DATE]) AS [CREATED_DATE]
			,'GENERAL_DISPATCH' AS [DEMAND_TYPE]
			,'' AS [ERP_REFERENCE]
			,[TL].[CODE_WAREHOUSE]
			,NULL AS [TYPE_DEMAND_CODE]
			,'' AS [TYPE_DEMAND_NAME]
		FROM
			@TASK_LIST [TL]
		LEFT JOIN @OP_WMS_PASS_DETAIL [PD] ON (
											[PD].[WAVE_PICKING_ID] = [TL].[WAVE_PICKING_ID]
											AND [PD].[MATERIAL_ID] = [TL].[MATERIAL_ID]
											)
		WHERE
			(
				[PD].[WAVE_PICKING_ID] IS NULL
				OR ([PD].[QTY] <> [TL].[QTY])
			)
		GROUP BY
			[TL].[CLIENT_CODE]
			,[TL].[CLIENT_NAME]
			,[TL].[WAVE_PICKING_ID]
			,[TL].[CODE_WAREHOUSE];
	END;
	ELSE
	BEGIN

		INSERT	INTO @TASK_LIST_TEMP
				(
					[WAVE_PICKING_ID]
				)
		SELECT
			[TL].[WAVE_PICKING_ID]
		FROM
			[wms].[OP_WMS_TASK_LIST] [TL]
		WHERE
			[TL].[COMPLETED_DATE] BETWEEN @INITIAL_DATE
									AND		@END_DATE
			AND [TL].[QUANTITY_PENDING] <> [TL].[QUANTITY_ASSIGNED]
		GROUP BY
			[TL].[WAVE_PICKING_ID]
		HAVING
			MIN([TL].[IS_COMPLETED]) = 1;



		INSERT	INTO @OP_WMS_PASS_DETAIL
				(
					[PICKING_DEMAND_HEADER_ID]
					,[MATERIAL_ID]
					,[QTY]
				)
		SELECT
			[PD].[PICKING_DEMAND_HEADER_ID]
			,[PD].[MATERIAL_ID]
			,SUM([PD].[QTY]) [QTY]
		FROM
			[wms].[OP_WMS3PL_PASSES] [PH]
		INNER JOIN [wms].[OP_WMS_PASS_DETAIL] [PD] ON ([PH].[PASS_ID] = [PD].[PASS_HEADER_ID])
		INNER JOIN @TASK_LIST_TEMP [t] ON [t].[WAVE_PICKING_ID] = [PD].[WAVE_PICKING_ID]
		WHERE
			[PH].[STATUS] <> 'CANCELED'
		GROUP BY
			[PD].[PICKING_DEMAND_HEADER_ID]
			,[PD].[MATERIAL_ID];




		SELECT DISTINCT
			[PDH].[PICKING_DEMAND_HEADER_ID]
			,[PDH].[CLIENT_CODE]
			,[PDH].[CLIENT_NAME]
			,[PDH].[DOC_NUM]
			,[PDH].[WAVE_PICKING_ID]
			,[PDH].[CREATED_DATE]
			,[PDH].[DEMAND_TYPE]
			,[PDH].[ERP_REFERENCE]
			,[PDH].[CODE_WAREHOUSE]
			,[PDH].[TYPE_DEMAND_CODE]
			,[PDH].[TYPE_DEMAND_NAME]
		FROM
			@TASK_LIST_TEMP [TLP]
		INNER JOIN [wms].[OP_WMS_NEXT_PICKING_DEMAND_HEADER] [PDH] ON ([TLP].[WAVE_PICKING_ID] = [PDH].[WAVE_PICKING_ID])
		INNER JOIN [wms].[OP_WMS_NEXT_PICKING_DEMAND_DETAIL] [PDD] ON ([PDD].[PICKING_DEMAND_HEADER_ID] = [PDH].[PICKING_DEMAND_HEADER_ID])
		LEFT JOIN @OP_WMS_PASS_DETAIL [PD] ON (
											[PDH].[PICKING_DEMAND_HEADER_ID] = [PD].[PICKING_DEMAND_HEADER_ID]
											AND [PDD].[MATERIAL_ID] = [PD].[MATERIAL_ID]
											)
		WHERE
			[PDH].[CODE_WAREHOUSE] = @CODE_WAREHOUSE
			AND [PDH].[DEMAND_TYPE] = @DEMAND_TYPE
			AND (
					[PD].[PICKING_DEMAND_HEADER_ID] IS NULL
					OR (
						[PD].[MATERIAL_ID] = [PDD].[MATERIAL_ID]
						AND [PD].[QTY] <> [PDD].[QTY]
						)
				);


	END;

END;